terraform, aws, ray training setup 
ray training in Aug 2025

##
cd ecs-blueprints/
cd terraform/ec2-examples/core-infra/
terraform init
terraform plan
terraform apply -target=module.vpc -target=aws_service_discovery_private_dns_namespace.this

##
cd distributed-ml-training
terraform init
terraform apply
terraform destroy

##
/Users/user/Documents/repo/cloud/aws
user-2:aws user$ mkdir distributed-ml-training
user-2:aws user$ cd distributed-ml-training/
user-2:distributed-ml-training user$ ls 0tlr
ls: 0tlr: No such file or directory
user-2:distributed-ml-training user$ ls -ltr
total 0
user-2:distributed-ml-training user$ git clone https://github.com/aws-ia/ecs-blueprints.git
Cloning into 'ecs-blueprints'...
remote: Enumerating objects: 3120, done.
remote: Counting objects: 100% (1172/1172), done.
remote: Compressing objects: 100% (479/479), done.
remote: Total 3120 (delta 893), reused 703 (delta 692), pack-reused 1948 (from 3)
Receiving objects: 100% (3120/3120), 8.27 MiB | 1.73 MiB/s, done.
Resolving deltas: 100% (1793/1793), done.
user-2:distributed-ml-training user$ ls -ltr
total 0
drwxr-xr-x  15 user  staff  480 Aug 13 21:25 ecs-blueprints
user-2:distributed-ml-training user$ cd ecs-blueprints/
user-2:ecs-blueprints user$ ls -ltr
total 64
-rw-r--r--   1 user  staff     40 Aug 13 21:25 CODEOWNERS
-rw-r--r--   1 user  staff   3250 Aug 13 21:25 CONTRIBUTING.md
-rw-r--r--   1 user  staff  11357 Aug 13 21:25 LICENSE
-rw-r--r--   1 user  staff    549 Aug 13 21:25 NOTICE.txt
-rw-r--r--   1 user  staff   5620 Aug 13 21:25 README.md
drwxr-xr-x  12 user  staff    384 Aug 13 21:25 application-code
drwxr-xr-x  10 user  staff    320 Aug 13 21:25 cdk
drwxr-xr-x  21 user  staff    672 Aug 13 21:25 docs
drwxr-xr-x   7 user  staff    224 Aug 13 21:25 terraform
user-2:ecs-blueprints user$ cd 
user-2:ecs-blueprints user$ pwd
/Users/user/Documents/repo/cloud/aws/distributed-ml-training/ecs-blueprints
user-2:ecs-blueprints user$ cd terraform/ec2-examples/core-infra/
user-2:core-infra user$ ls -tlr
total 48
-rw-r--r--  1 user  staff  5488 Aug 13 21:25 README.md
-rw-r--r--  1 user  staff  4619 Aug 13 21:25 main.tf
-rw-r--r--  1 user  staff  1704 Aug 13 21:25 outputs.tf
-rw-r--r--  1 user  staff   147 Aug 13 21:25 versions.tf
user-2:core-infra user$ terraform init
-bash: terraform: command not found
user-2:core-infra user$     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
==> Checking for `sudo` access (which may request your password)...
Password:
==> This script will install:
/usr/local/bin/brew
/usr/local/share/doc/homebrew
/usr/local/share/man/man1/brew.1
/usr/local/share/zsh/site-functions/_brew
/usr/local/etc/bash_completion.d/brew
/usr/local/Homebrew

Press RETURN/ENTER to continue or any other key to abort:
==> /usr/bin/sudo /usr/sbin/chown -R user:admin /usr/local/Homebrew
==> Downloading and installing Homebrew...
remote: Enumerating objects: 985, done.
remote: Counting objects: 100% (406/406), done.
remote: Compressing objects: 100% (129/129), done.
remote: Total 985 (delta 345), reused 283 (delta 277), pack-reused 579 (from 5)
==> Updating Homebrew...
Updated 2 taps (homebrew/core and homebrew/cask).
==> Installation successful!

==> Homebrew has enabled anonymous aggregate formulae and cask analytics.
Read the analytics documentation (and how to opt-out) here:
  https://docs.brew.sh/Analytics
No analytics data has been sent yet (nor will any be during this install run).

==> Homebrew is run entirely by unpaid volunteers. Please consider donating:
  https://github.com/Homebrew/brew#donations

==> Next steps:
- Run these commands in your terminal to add Homebrew to your PATH:
    echo >> /Users/user/.config/fish/config.fish
    echo 'eval "$(/usr/local/bin/brew shellenv)"' >> /Users/user/.config/fish/config.fish
    eval "$(/usr/local/bin/brew shellenv)"
- Run brew help to get started
- Further documentation:
    https://docs.brew.sh

user-2:core-infra user$ brew tap hashicorp/tap
==> Tapping hashicorp/tap
Cloning into '/usr/local/Homebrew/Library/Taps/hashicorp/homebrew-tap'...
remote: Enumerating objects: 5745, done.
remote: Counting objects: 100% (955/955), done.
remote: Compressing objects: 100% (262/262), done.
remote: Total 5745 (delta 828), reused 698 (delta 693), pack-reused 4790 (from 2)
Receiving objects: 100% (5745/5745), 1023.11 KiB | 6.28 MiB/s, done.
Resolving deltas: 100% (4039/4039), done.
Tapped 2 casks and 32 formulae (93 files, 1.3MB).
user-2:core-infra user$ brew install hashicorp/tap/terraform
==> Fetching downloads for: terraform
==> Fetching hashicorp/tap/terraform
==> Downloading https://releases.hashicorp.com/terraform/1.12.2/terraform_1.12.2_darwin_amd64.zip
############################################################################################## 100.0%
==> Installing terraform from hashicorp/tap
Error: Your Xcode (13.3) at /Applications/Xcode.app is too outdated.
Please update to Xcode 16.4 (or delete it).
Xcode can be updated from the App Store.

user-2:core-infra user$ Your Xcode (13.3) at /Applications/Xcode.app is too outdated.
user-2:core-infra user$ sudo rm -rf /Library/Developer/CommandLineTools
Password:
user-2:core-infra user$ sudo xcode-select --install
xcode-select: note: install requested for command line developer tools
user-2:core-infra user$ brew install hashicorp/tap/terraform
user-2:core-infra user$ xcode-select
xcode-select: error: no command option given
Usage: xcode-select [options]

Print or change the path to the active developer directory. This directory
controls which tools are used for the Xcode command line tools (for example, 
xcodebuild) as well as the BSD development commands (such as cc and make).

Options:
  -h, --help                  print this help message and exit
  -p, --print-path            print the path of the active developer directory
  -s <path>, --switch <path>  set the path for the active developer directory
  --install                   open a dialog for installation of the command line developer tools
  -v, --version               print the xcode-select version
  -r, --reset                 reset to the default command line tools path
user-2:core-infra user$ xcode-select -v
xcode-select version 2410.
user-2:core-infra user$ brew install hashicorp/tap/terraform
==> Auto-updating Homebrew...
Adjust how often this is run with `$HOMEBREW_AUTO_UPDATE_SECS` or disable with
`$HOMEBREW_NO_AUTO_UPDATE=1`. Hide these hints with `$HOMEBREW_NO_ENV_HINTS=1` (see `man brew`).
==> Fetching downloads for: terraform
==> Fetching hashicorp/tap/terraform
==> Downloading https://releases.hashicorp.com/terraform/1.12.2/terraform_1.12.2_darwin_amd64.zip
Already downloaded: /Users/user/Library/Caches/Homebrew/downloads/854453ecd59f77d5046324a85964c98e9f52e2d3479eef643566b0cd4a12efb9--terraform_1.12.2_darwin_amd64.zip
==> Installing terraform from hashicorp/tap
Error: Your Xcode (13.3) at /Applications/Xcode.app is too outdated.
Please update to Xcode 16.4 (or delete it).
Xcode can be updated from the App Store.

user-2:core-infra user$ sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer
Password:
user-2:core-infra user$ brew install hashicorp/tap/terraform
==> Fetching downloads for: terraform
==> Fetching hashicorp/tap/terraform
==> Downloading https://releases.hashicorp.com/terraform/1.12.2/terraform_1.12.2_darwin_amd64.zip
Already downloaded: /Users/user/Library/Caches/Homebrew/downloads/854453ecd59f77d5046324a85964c98e9f52e2d3479eef643566b0cd4a12efb9--terraform_1.12.2_darwin_amd64.zip
==> Installing terraform from hashicorp/tap
Error: Your Xcode (13.3) at /Applications/Xcode.app is too outdated.
Please update to Xcode 16.4 (or delete it).
Xcode can be updated from the App Store.

user-2:core-infra user$ cd /Applications/
user-2:Applications user$ ls -l Xcode.app/
total 0
drwxr-xr-x  18 root  wheel  576 Apr  9  2022 Contents
user-2:Applications user$ pwd
/Applications
user-2:Applications user$ mv Xcode.app/ Xcode.app.bak
mv: rename Xcode.app/ to Xcode.app.bak: Permission denied
user-2:Applications user$ sudo mv Xcode.app/ Xcode.app.bak
Password:
user-2:Applications user$ brew install hashicorp/tap/terraform
==> Fetching downloads for: terraform
==> Fetching hashicorp/tap/terraform
==> Downloading https://releases.hashicorp.com/terraform/1.12.2/terraform_1.12.2_darwin_amd64.zip
Already downloaded: /Users/user/Library/Caches/Homebrew/downloads/854453ecd59f77d5046324a85964c98e9f52e2d3479eef643566b0cd4a12efb9--terraform_1.12.2_darwin_amd64.zip
==> Installing terraform from hashicorp/tap
Error: Your Xcode (13.3 => /Applications/Xcode.app.bak/Contents/Developer) at /Applications/Xcode.app.bak is too outdated.
Please update to Xcode 16.4 (or delete it).
Xcode can be updated from the App Store.

user-2:Applications user$ sudo rm -rf /Applications/Xcode.app.bak/
Password:
user-2:Applications user$ xcode-select --install
xcode-select: note: Command line tools are already installed. Use "Software Update" in System Settings or the softwareupdate command line interface to install updates
user-2:Applications user$ xcode-select --install
xcode-select: note: Command line tools are already installed. Use "Software Update" in System Settings or the softwareupdate command line interface to install updates
user-2:Applications user$ softwareupdate --all --install --force
Software Update Tool

Finding available software
No updates are available.
user-2:Applications user$ sudo rm -rf /Library/Developer/CommandLineTools
Password:
user-2:Applications user$ xcode-select --install
xcode-select: note: install requested for command line developer tools
user-2:Applications user$ softwareupdate --install -a
Software Update Tool

Finding available software
No updates are available.
user-2:Applications user$ brew install hashicorp/tap/terraform
==> Auto-updating Homebrew...
Adjust how often this is run with `$HOMEBREW_AUTO_UPDATE_SECS` or disable with
`$HOMEBREW_NO_AUTO_UPDATE=1`. Hide these hints with `$HOMEBREW_NO_ENV_HINTS=1` (see `man brew`).
==> Fetching downloads for: terraform
==> Fetching hashicorp/tap/terraform
==> Downloading https://releases.hashicorp.com/terraform/1.12.2/terraform_1.12.2_darwin_amd64.zip
Already downloaded: /Users/user/Library/Caches/Homebrew/downloads/854453ecd59f77d5046324a85964c98e9f52e2d3479eef643566b0cd4a12efb9--terraform_1.12.2_darwin_amd64.zip
==> Installing terraform from hashicorp/tap
🍺  /usr/local/Cellar/terraform/1.12.2: 5 files, 92.2MB, built in 5 seconds
==> Running `brew cleanup terraform`...
Disable this behaviour by setting `HOMEBREW_NO_INSTALL_CLEANUP=1`.
Hide these hints with `HOMEBREW_NO_ENV_HINTS=1` (see `man brew`).
==> No outdated dependents to upgrade!
user-2:Applications user$ pwd
/Applications
user-2:Applications user$ cd 
user-2:~ user$ cd Documents/repo/
user-2:repo user$ ls -tlr
total 0
drwxrwxrwx@   5 user  staff   160 Aug  4  2024 cplusplus-lessons
drwxrwxrwx@  11 user  staff   352 Aug 10  2024 deepracer-log-analysis
drwxrwxrwx@  32 user  staff  1024 Aug 20  2024 deepracer-analysis
drwxrwxrwx+  12 user  staff   384 Sep 26  2024 deepracer-k1999-race-lines
drwxrwxrwx@  29 user  staff   928 Oct  1  2024 Capstone_AWS_DeepRacer
drwxrwxrwx+   6 user  staff   192 Nov  3  2024 github-info
drwxrwxrwx+ 117 user  staff  3744 Nov 19  2024 llama.cpp
drwxrwxrwx+   4 user  staff   128 Nov 29  2024 pfs
drwxrwxrwx+   6 user  staff   192 Dec  8  2024 cplusplus-basics
drwxrwxrwx+  18 user  staff   576 Dec  8  2024 diana
drwxrwxrwx@   8 user  staff   256 Dec  8  2024 aiml
drwxrwxrwx@   8 user  staff   256 Dec  8  2024 fastapi-poetry
drwxrwxrwx@   9 user  staff   288 Dec  8  2024 flask-basic
drwxrwxrwx+   5 user  staff   160 Dec  8  2024 sdl2-2.0.9
drwxrwxrwx+  35 user  staff  1120 Dec  8  2024 whisper.cpp
drwxrwxrwx@   7 user  staff   224 Dec  8  2024 flask-basic-db-api
drwxrwxrwx@ 162 user  staff  5184 Jan  6  2025 leetcode-problems
drwxr-xr-x    2 user  staff    64 Jan  6  2025 spark_intro
drwxr-xr-x    2 user  staff    64 Jan  6  2025 sql_intro
drwxr-xr-x    2 user  staff    64 Jan  6  2025 data_modeling_intro
drwxr-xr-x    2 user  staff    64 Jan  6  2025 scala_intro
drwxr-xr-x    5 user  staff   160 Jan  6  2025 airflow_intro
drwxr-xr-x@   4 user  staff   128 Jan  8  2025 high_performance_python
drwxrwxrwx+  21 user  staff   672 Feb 23 08:34 llm-tutorials
drwxr-xr-x    2 user  staff    64 Feb 23 21:53 nlp
drwxrwxrwx@  26 user  staff   832 Feb 23 21:53 py-learn
drwxr-xr-x    7 user  staff   224 Feb 26 09:02 deepseek-demo
drwxr-xr-x   13 user  staff   416 Feb 27 20:31 aws-cdk
drwxr-xr-x   12 user  staff   384 Mar  9 19:37 receipts
drwxr-xr-x    3 user  staff    96 Mar 22 11:35 graph-rag
drwxrwxrwx@   5 user  staff   160 Mar 23 10:20 notes
drwxr-xr-x   41 user  staff  1312 Mar 25 20:14 dsa-js
drwxr-xr-x@   9 user  staff   288 Mar 28 22:09 py-test-basics
drwxr-xr-x    9 user  staff   288 Mar 30 00:41 rank-dsa
drwxr-xr-x    4 user  staff   128 Apr 15 21:20 aws-labs
drwxr-xr-x@   5 user  staff   160 May  1 00:17 deepseek-local
drwxrwxrwx+  37 user  staff  1184 May  3 14:49 pyclopedia
drwxr-xr-x    3 user  staff    96 May  3 23:42 private_data
drwxr-xr-x    4 user  staff   128 May 25 14:35 py-performance
drwxrwxrwx@  60 user  staff  1920 May 26 11:28 javascript-full-course
drwxr-xr-x   10 user  staff   320 May 27 20:25 pandas_vs_numpy
drwxr-xr-x@   4 user  staff   128 May 27 21:23 cloudformation
drwxrwxrwx@  48 user  staff  1536 Jun 23 23:28 hackerrank
drwxr-xr-x@   4 user  staff   128 Jun 25 22:47 sme-questionaire
drwxr-xr-x    3 user  staff    96 Jul  6 22:59 andrej_kaparthy
drwxr-xr-x@  24 user  staff   768 Jul 17 20:07 train_own_llm
drwxr-xr-x    6 user  staff   192 Jul 28 07:24 ollama-embedding-url-rag
drwxrwxrwx+  34 user  staff  1088 Jul 30 19:53 learn
drwxrwxrwx@  13 user  staff   416 Aug  3 08:35 aws-mla-01
drwxrwxrwx+  12 user  staff   384 Aug  9 21:57 cloud
drwxrwxrwx+  18 user  staff   576 Aug 11 23:00 notebook-lessons
drwxr-xr-x@  18 user  staff   576 Aug 12 21:18 ai-solution-prototypes
drwxr-xr-x@  13 user  staff   416 Aug 13 20:39 cv
user-2:repo user$ cd cloud
user-2:cloud user$ ls
a.zip		boto3-api.txt	LICENSE		qdev
aws		demo		mcp-apps	rhel-k8s-vmware
user-2:cloud user$ cd aws/
user-2:aws user$ ls
001.zip				compliane_audit.txt		saa-c03.txt
0101.pdf			create-vpc-ec2-cfn		test2.pdf
01010.pdf			distributed-ml-training		test2.zip
0111.png			iac_cdk.txt			threeonetwo.png
0x10.png.bak			import				zip-notes.txt
ai-ml				learning
aws_iam_best_practices.txt	ml-fastapi-docker-ecs
user-2:aws user$ cd distributed-ml-training/
user-2:distributed-ml-training user$ ls -ltr
total 0
drwxr-xr-x  15 user  staff  480 Aug 13 21:25 ecs-blueprints
user-2:distributed-ml-training user$ cd ecs-blueprints/
user-2:ecs-blueprints user$ ls
application-code	CONTRIBUTING.md		NOTICE.txt
cdk			docs			README.md
CODEOWNERS		LICENSE			terraform
user-2:ecs-blueprints user$ cd terraform/ec2-examples/core-infra/
user-2:core-infra user$ ls -tlr
total 48
-rw-r--r--  1 user  staff  5488 Aug 13 21:25 README.md
-rw-r--r--  1 user  staff  4619 Aug 13 21:25 main.tf
-rw-r--r--  1 user  staff  1704 Aug 13 21:25 outputs.tf
-rw-r--r--  1 user  staff   147 Aug 13 21:25 versions.tf
user-2:core-infra user$ terraform init
Initializing the backend...
Initializing modules...
Downloading registry.terraform.io/terraform-aws-modules/autoscaling/aws 8.3.1 for autoscaling...
- autoscaling in .terraform/modules/autoscaling
Downloading registry.terraform.io/terraform-aws-modules/security-group/aws 5.3.0 for autoscaling_sg...
- autoscaling_sg in .terraform/modules/autoscaling_sg
Downloading registry.terraform.io/terraform-aws-modules/ecs/aws 5.12.1 for ecs_cluster...
- ecs_cluster in .terraform/modules/ecs_cluster/modules/cluster
Downloading registry.terraform.io/terraform-aws-modules/vpc/aws 5.21.0 for vpc...
- vpc in .terraform/modules/vpc
Initializing provider plugins...
- Finding hashicorp/aws versions matching ">= 3.29.0, >= 4.66.1, >= 5.0.0, >= 5.79.0, >= 5.85.0, < 6.0.0"...
- Installing hashicorp/aws v5.100.0...
- Installed hashicorp/aws v5.100.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
user-2:core-infra user$ terraform plan
data.aws_ssm_parameter.ecs_optimized_ami: Reading...
data.aws_availability_zones.available: Reading...
module.autoscaling.data.aws_partition.current: Reading...
module.autoscaling.data.aws_partition.current: Read complete after 0s [id=aws]
module.autoscaling.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.autoscaling.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602]
data.aws_ssm_parameter.ecs_optimized_ami: Read complete after 1s [id=/aws/service/ecs/optimized-ami/amazon-linux-2/recommended]
data.aws_availability_zones.available: Read complete after 1s [id=us-west-2]

Terraform used the selected providers to generate the following execution plan. Resource actions are
indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_service_discovery_private_dns_namespace.this will be created
  + resource "aws_service_discovery_private_dns_namespace" "this" {
      + arn         = (known after apply)
      + description = "Service discovery <namespace>.<clustername>.local"
      + hosted_zone = (known after apply)
      + id          = (known after apply)
      + name        = "default.core-infra.local"
      + tags        = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + vpc         = (known after apply)
    }

  # module.autoscaling.aws_autoscaling_group.idc[0] will be created
  + resource "aws_autoscaling_group" "idc" {
      + arn                              = (known after apply)
      + availability_zones               = (known after apply)
      + default_cooldown                 = (known after apply)
      + desired_capacity                 = 3
      + force_delete                     = false
      + force_delete_warm_pool           = false
      + health_check_grace_period        = 300
      + health_check_type                = "EC2"
      + id                               = (known after apply)
      + ignore_failed_scaling_activities = false
      + load_balancers                   = (known after apply)
      + max_size                         = 5
      + metrics_granularity              = "1Minute"
      + min_size                         = 3
      + name                             = (known after apply)
      + name_prefix                      = "core-infra-"
      + predicted_capacity               = (known after apply)
      + protect_from_scale_in            = true
      + service_linked_role_arn          = (known after apply)
      + target_group_arns                = (known after apply)
      + termination_policies             = []
      + vpc_zone_identifier              = (known after apply)
      + wait_for_capacity_timeout        = "10m"
      + warm_pool_size                   = (known after apply)

      + availability_zone_distribution (known after apply)

      + capacity_reservation_specification (known after apply)

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = (known after apply)
        }

      + mixed_instances_policy (known after apply)

      + tag {
          + key                 = "AmazonECSManaged"
          + propagate_at_launch = true
          + value               = "true"
        }
      + tag {
          + key                 = "Blueprint"
          + propagate_at_launch = true
          + value               = "core-infra"
        }
      + tag {
          + key                 = "GithubRepo"
          + propagate_at_launch = true
          + value               = "github.com/aws-ia/ecs-blueprints"
        }
      + tag {
          + key                 = "Name"
          + propagate_at_launch = true
          + value               = "core-infra"
        }

      + timeouts {}

      + traffic_source (known after apply)
    }

  # module.autoscaling.aws_iam_instance_profile.this[0] will be created
  + resource "aws_iam_instance_profile" "this" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = "core-infra-"
      + path        = "/"
      + role        = (known after apply)
      + tags        = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id   = (known after apply)
    }

  # module.autoscaling.aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "EC2AssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "ECS role for core-infra"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "core-infra-"
      + path                  = "/"
      + tags                  = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # module.autoscaling.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
      + role       = (known after apply)
    }

  # module.autoscaling.aws_launch_template.this[0] will be created
  + resource "aws_launch_template" "this" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + id                     = (known after apply)
      + image_id               = (sensitive value)
      + instance_type          = "m5.xlarge"
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "core-infra-"
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + user_data              = "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1jb3JlLWluZnJhCkVDU19MT0dMRVZFTD1kZWJ1ZwpFQ1NfRU5BQkxFX1RBU0tfSUFNX1JPTEU9dHJ1ZQpFT0YK"
      + vpc_security_group_ids = (known after apply)

      + iam_instance_profile (known after apply)

      + metadata_options (known after apply)

      + monitoring {
          + enabled = true
        }
    }

  # module.autoscaling_sg.aws_security_group.this_name_prefix[0] will be created
  + resource "aws_security_group" "this_name_prefix" {
      + arn                    = (known after apply)
      + description            = "Autoscaling group security group"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "core-infra-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "10m"
          + delete = "15m"
        }
    }

  # module.autoscaling_sg.aws_security_group_rule.egress_rules[0] will be created
  + resource "aws_security_group_rule" "egress_rules" {
      + cidr_blocks              = [
          + "0.0.0.0/0",
        ]
      + description              = "All protocols"
      + from_port                = -1
      + id                       = (known after apply)
      + ipv6_cidr_blocks         = [
          + "::/0",
        ]
      + prefix_list_ids          = []
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = -1
      + type                     = "egress"
    }

  # module.autoscaling_sg.aws_security_group_rule.ingress_rules[0] will be created
  + resource "aws_security_group_rule" "ingress_rules" {
      + cidr_blocks              = [
          + "10.0.0.0/16",
        ]
      + description              = "HTTP"
      + from_port                = 80
      + id                       = (known after apply)
      + ipv6_cidr_blocks         = []
      + prefix_list_ids          = []
      + protocol                 = "tcp"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 80
      + type                     = "ingress"
    }

  # module.ecs_cluster.aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + log_group_class   = (known after apply)
      + name              = "/aws/ecs/core-infra"
      + name_prefix       = (known after apply)
      + retention_in_days = 90
      + skip_destroy      = false
      + tags              = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all          = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
    }

  # module.ecs_cluster.aws_ecs_capacity_provider.this["core-infra"] will be created
  + resource "aws_ecs_capacity_provider" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "core-infra"
      + tags     = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }

      + auto_scaling_group_provider {
          + auto_scaling_group_arn         = (known after apply)
          + managed_draining               = (known after apply)
          + managed_termination_protection = "ENABLED"

          + managed_scaling {
              + instance_warmup_period    = (known after apply)
              + maximum_scaling_step_size = 5
              + minimum_scaling_step_size = 1
              + status                    = "ENABLED"
              + target_capacity           = 60
            }
        }
    }

  # module.ecs_cluster.aws_ecs_cluster.this[0] will be created
  + resource "aws_ecs_cluster" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "core-infra"
      + tags     = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }

      + configuration {
          + execute_command_configuration {
              + logging = "DEFAULT"
            }
        }

      + service_connect_defaults {
          + namespace = (known after apply)
        }

      + setting {
          + name  = "containerInsights"
          + value = "enabled"
        }
    }

  # module.ecs_cluster.aws_ecs_cluster_capacity_providers.this[0] will be created
  + resource "aws_ecs_cluster_capacity_providers" "this" {
      + capacity_providers = [
          + "core-infra",
        ]
      + cluster_name       = "core-infra"
      + id                 = (known after apply)

      + default_capacity_provider_strategy {
          + base              = 1
          + capacity_provider = "core-infra"
          + weight            = 1
        }
    }

  # module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
      + egress {
          + action          = "allow"
          + cidr_block      = "0.0.0.0/0"
          + from_port       = 0
          + protocol        = "-1"
          + rule_no         = 100
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
      + ingress {
          + action          = "allow"
          + cidr_block      = "0.0.0.0/0"
          + from_port       = 0
          + protocol        = "-1"
          + rule_no         = 100
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
      + tags_all             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
      + tags_all                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private"
        }
      + tags_all         = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public"
        }
      + tags_all         = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[2] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[2] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2a"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.16.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2b"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[2] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2c"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.48.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2a"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.49.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2b"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[2] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.50.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2c"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all                             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
    }

Plan: 36 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cluster_arn                            = (known after apply)
  + cluster_autoscaling_capacity_providers = {
      + core-infra = {
          + arn                         = (known after apply)
          + auto_scaling_group_provider = [
              + {
                  + auto_scaling_group_arn         = (known after apply)
                  + managed_draining               = (known after apply)
                  + managed_scaling                = [
                      + {
                          + instance_warmup_period    = (known after apply)
                          + maximum_scaling_step_size = 5
                          + minimum_scaling_step_size = 1
                          + status                    = "ENABLED"
                          + target_capacity           = 60
                        },
                    ]
                  + managed_termination_protection = "ENABLED"
                },
            ]
          + id                          = (known after apply)
          + name                        = "core-infra"
          + tags                        = {
              + Blueprint  = "core-infra"
              + GithubRepo = "github.com/aws-ia/ecs-blueprints"
            }
          + tags_all                    = {
              + Blueprint  = "core-infra"
              + GithubRepo = "github.com/aws-ia/ecs-blueprints"
            }
        }
    }
  + cluster_capacity_providers             = (known after apply)
  + cluster_id                             = (known after apply)
  + cluster_name                           = "core-infra"
  + private_subnets                        = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + private_subnets_cidr_blocks            = [
      + "10.0.0.0/20",
      + "10.0.16.0/20",
      + "10.0.32.0/20",
    ]
  + public_subnets                         = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + service_discovery_namespaces           = {
      + arn         = (known after apply)
      + description = "Service discovery <namespace>.<clustername>.local"
      + hosted_zone = (known after apply)
      + id          = (known after apply)
      + name        = "default.core-infra.local"
      + tags        = {
          + Blueprint  = "core-infra"
          + GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + Blueprint  = "core-infra"
          + GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      + vpc         = (known after apply)
    }
  + vpc_id                                 = (known after apply)

────────────────────────────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't guarantee to take exactly
these actions if you run "terraform apply" now.
user-2:core-infra user$ terraform apply -target=module.vpc -target=aws_service_discovery_private_dns_namespace.this
data.aws_availability_zones.available: Reading...
data.aws_availability_zones.available: Read complete after 0s [id=us-west-2]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the
following symbols:
  + create

Terraform will perform the following actions:

  # aws_service_discovery_private_dns_namespace.this will be created
  + resource "aws_service_discovery_private_dns_namespace" "this" {
      + arn         = (known after apply)
      + description = "Service discovery <namespace>.<clustername>.local"
      + hosted_zone = (known after apply)
      + id          = (known after apply)
      + name        = "default.core-infra.local"
      + tags        = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + vpc         = (known after apply)
    }

  # module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
      + egress {
          + action          = "allow"
          + cidr_block      = "0.0.0.0/0"
          + from_port       = 0
          + protocol        = "-1"
          + rule_no         = 100
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
      + ingress {
          + action          = "allow"
          + cidr_block      = "0.0.0.0/0"
          + from_port       = 0
          + protocol        = "-1"
          + rule_no         = 100
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + tags_all               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-default"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + ipam_pool_id         = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
      + tags_all             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
      + tags_all                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-us-west-2a"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private"
        }
      + tags_all         = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public"
        }
      + tags_all         = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[2] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[2] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2a"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.16.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2b"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[2] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2c"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-private-us-west-2c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.48.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2a"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2a"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.49.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2b"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2b"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[2] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-west-2c"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.50.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2c"
        }
      + tags_all                                       = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra-public-us-west-2c"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
      + tags_all                             = {
          + "Blueprint"  = "core-infra"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "core-infra"
        }
    }

Plan: 24 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + private_subnets              = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + private_subnets_cidr_blocks  = [
      + "10.0.0.0/20",
      + "10.0.16.0/20",
      + "10.0.32.0/20",
    ]
  + public_subnets               = [
      + (known after apply),
      + (known after apply),
      + (known after apply),
    ]
  + service_discovery_namespaces = {
      + arn         = (known after apply)
      + description = "Service discovery <namespace>.<clustername>.local"
      + hosted_zone = (known after apply)
      + id          = (known after apply)
      + name        = "default.core-infra.local"
      + tags        = {
          + Blueprint  = "core-infra"
          + GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + Blueprint  = "core-infra"
          + GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      + vpc         = (known after apply)
    }
  + vpc_id                       = (known after apply)
╷
│ Warning: Resource targeting is in effect
│ 
│ You are creating a plan with the -target option, which means that the result of this plan may not represent all of the
│ changes requested by the current configuration.
│ 
│ The -target option is not for routine use, and is provided only for exceptional situations such as recovering from errors or
│ mistakes, or when Terraform specifically suggests to use it as part of an error message.
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.vpc.aws_vpc.this[0]: Creating...
module.vpc.aws_vpc.this[0]: Still creating... [00m10s elapsed]
module.vpc.aws_vpc.this[0]: Creation complete after 12s [id=vpc-086770102a22a91bd]
aws_service_discovery_private_dns_namespace.this: Creating...
module.vpc.aws_internet_gateway.this[0]: Creating...
module.vpc.aws_default_route_table.default[0]: Creating...
module.vpc.aws_route_table.private[0]: Creating...
module.vpc.aws_default_security_group.this[0]: Creating...
module.vpc.aws_subnet.public[0]: Creating...
module.vpc.aws_subnet.private[2]: Creating...
module.vpc.aws_subnet.public[2]: Creating...
module.vpc.aws_subnet.public[1]: Creating...
module.vpc.aws_default_network_acl.this[0]: Creating...
module.vpc.aws_internet_gateway.this[0]: Creation complete after 1s [id=igw-000df586ea38625dd]
module.vpc.aws_default_route_table.default[0]: Creation complete after 1s [id=rtb-0cf1a9f14f363660b]
module.vpc.aws_route_table.public[0]: Creating...
module.vpc.aws_subnet.private[1]: Creating...
module.vpc.aws_route_table.private[0]: Creation complete after 1s [id=rtb-0049636a410d98ec0]
module.vpc.aws_subnet.private[0]: Creating...
module.vpc.aws_subnet.public[0]: Creation complete after 1s [id=subnet-052722c629e9b9679]
module.vpc.aws_subnet.public[2]: Creation complete after 1s [id=subnet-0017d5c65985eb668]
module.vpc.aws_eip.nat[0]: Creating...
module.vpc.aws_route_table.public[0]: Creation complete after 0s [id=rtb-0b6d50b53c8d2520b]
module.vpc.aws_route.public_internet_gateway[0]: Creating...
module.vpc.aws_subnet.private[1]: Creation complete after 1s [id=subnet-0427cd24b2f6ba6d5]
module.vpc.aws_default_network_acl.this[0]: Creation complete after 2s [id=acl-00bed44921d3d73b5]
module.vpc.aws_subnet.private[0]: Creation complete after 1s [id=subnet-0135326ea3ac0f457]
module.vpc.aws_route.public_internet_gateway[0]: Creation complete after 1s [id=r-rtb-0b6d50b53c8d2520b1080289494]
module.vpc.aws_eip.nat[0]: Creation complete after 1s [id=eipalloc-0664b98e05814ecd7]
module.vpc.aws_default_security_group.this[0]: Creation complete after 2s [id=sg-0fc873ae087c259f1]
module.vpc.aws_subnet.private[2]: Creation complete after 4s [id=subnet-0dba6c4e8436fbf44]
module.vpc.aws_route_table_association.private[2]: Creating...
module.vpc.aws_route_table_association.private[0]: Creating...
module.vpc.aws_route_table_association.private[1]: Creating...
module.vpc.aws_subnet.public[1]: Creation complete after 4s [id=subnet-017f7c39ccfb3c88b]
module.vpc.aws_route_table_association.public[2]: Creating...
module.vpc.aws_route_table_association.public[0]: Creating...
module.vpc.aws_route_table_association.public[1]: Creating...
module.vpc.aws_nat_gateway.this[0]: Creating...
module.vpc.aws_route_table_association.private[1]: Creation complete after 0s [id=rtbassoc-02c992ecd715ab38e]
module.vpc.aws_route_table_association.private[2]: Creation complete after 0s [id=rtbassoc-003da1893bb8eb8aa]
module.vpc.aws_route_table_association.private[0]: Creation complete after 0s [id=rtbassoc-0f3ad9f85c64ed1de]
module.vpc.aws_route_table_association.public[0]: Creation complete after 0s [id=rtbassoc-0fc6d067272b36d40]
module.vpc.aws_route_table_association.public[2]: Creation complete after 0s [id=rtbassoc-0b532683bbb6ce41c]
module.vpc.aws_route_table_association.public[1]: Creation complete after 0s [id=rtbassoc-019f732b29cea7f70]
aws_service_discovery_private_dns_namespace.this: Still creating... [00m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [00m10s elapsed]
aws_service_discovery_private_dns_namespace.this: Still creating... [00m20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [00m20s elapsed]
aws_service_discovery_private_dns_namespace.this: Still creating... [00m30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [00m30s elapsed]
aws_service_discovery_private_dns_namespace.this: Still creating... [00m40s elapsed]
aws_service_discovery_private_dns_namespace.this: Creation complete after 44s [id=ns-45yknjg3wwygd2xr]
module.vpc.aws_nat_gateway.this[0]: Still creating... [00m40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [00m50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [01m00s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [01m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [01m20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [01m30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [01m40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [01m50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [02m00s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still creating... [02m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Creation complete after 2m15s [id=nat-067679c1f1bc4a875]
module.vpc.aws_route.private_nat_gateway[0]: Creating...
module.vpc.aws_route.private_nat_gateway[0]: Creation complete after 0s [id=r-rtb-0049636a410d98ec01080289494]
╷
│ Warning: Applied changes may be incomplete
│ 
│ The plan was created with the -target option in effect, so some changes requested in the configuration may have been ignored and the output
│ values may not be fully updated. Run the following command to verify that no other changes are pending:
│     terraform plan
│ 
│ Note that the -target option is not suitable for routine use, and is provided only for exceptional situations such as recovering from errors or
│ mistakes, or when Terraform specifically suggests to use it as part of an error message.
╵

Apply complete! Resources: 24 added, 0 changed, 0 destroyed.

Outputs:

private_subnets = [
  "subnet-0135326ea3ac0f457",
  "subnet-0427cd24b2f6ba6d5",
  "subnet-0dba6c4e8436fbf44",
]
private_subnets_cidr_blocks = tolist([
  "10.0.0.0/20",
  "10.0.16.0/20",
  "10.0.32.0/20",
])
public_subnets = [
  "subnet-052722c629e9b9679",
  "subnet-017f7c39ccfb3c88b",
  "subnet-0017d5c65985eb668",
]
service_discovery_namespaces = {
  "arn" = "arn:aws:servicediscovery:us-west-2:142715460708:namespace/ns-45yknjg3wwygd2xr"
  "description" = "Service discovery <namespace>.<clustername>.local"
  "hosted_zone" = "Z05295251WSH9AA73HQAV"
  "id" = "ns-45yknjg3wwygd2xr"
  "name" = "default.core-infra.local"
  "tags" = tomap({
    "Blueprint" = "core-infra"
    "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
  })
  "tags_all" = tomap({
    "Blueprint" = "core-infra"
    "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
  })
  "vpc" = "vpc-086770102a22a91bd"
}
vpc_id = "vpc-086770102a22a91bd"
user-2:core-infra user$ cd ..
user-2:ec2-examples user$ ls
backend-service			distributed-ml-training		lb-service
core-infra			distributed-ml-training-fsdp	vllm-inferentia
user-2:ec2-examples user$ cd distributed-ml-training
user-2:distributed-ml-training user$ terraform init
Initializing the backend...
Initializing modules...
Downloading registry.terraform.io/terraform-aws-modules/autoscaling/aws 8.3.1 for autoscaling_head...
- autoscaling_head in .terraform/modules/autoscaling_head
Downloading registry.terraform.io/terraform-aws-modules/security-group/aws 4.17.2 for autoscaling_sg...
- autoscaling_sg in .terraform/modules/autoscaling_sg
Downloading registry.terraform.io/terraform-aws-modules/autoscaling/aws 8.3.1 for autoscaling_workers...
- autoscaling_workers in .terraform/modules/autoscaling_workers
Downloading registry.terraform.io/terraform-aws-modules/ecs/aws 5.12.1 for ecs_cluster...
- ecs_cluster in .terraform/modules/ecs_cluster/modules/cluster
Downloading registry.terraform.io/terraform-aws-modules/ecs/aws 5.12.1 for ecs_service_head...
- ecs_service_head in .terraform/modules/ecs_service_head/modules/service
- ecs_service_head.container_definition in .terraform/modules/ecs_service_head/modules/container-definition
Downloading registry.terraform.io/terraform-aws-modules/ecs/aws 5.12.1 for ecs_service_workers...
- ecs_service_workers in .terraform/modules/ecs_service_workers/modules/service
- ecs_service_workers.container_definition in .terraform/modules/ecs_service_workers/modules/container-definition
Initializing provider plugins...
- Finding hashicorp/random versions matching ">= 3.6.0"...
- Finding hashicorp/aws versions matching ">= 3.29.0, >= 4.66.1, >= 5.0.0, >= 5.85.0, < 6.0.0"...
- Installing hashicorp/random v3.7.2...
- Installed hashicorp/random v3.7.2 (signed by HashiCorp)
- Installing hashicorp/aws v5.100.0...
- Installed hashicorp/aws v5.100.0 (signed by HashiCorp)
Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
user-2:distributed-ml-training user$ terraform apply
data.aws_service_discovery_dns_namespace.core_infra: Reading...
module.autoscaling_head.data.aws_partition.current: Reading...
data.aws_ssm_parameter.ecs_gpu_optimized_ami: Reading...
module.ecs_service_head.data.aws_partition.current: Reading...
module.ecs_service_head.data.aws_region.current: Reading...
module.autoscaling_workers.data.aws_partition.current: Reading...
module.ecs_service_head.module.container_definition["ray_head"].data.aws_region.current: Reading...
data.aws_caller_identity.current: Reading...
module.autoscaling_head.data.aws_partition.current: Read complete after 0s [id=aws]
module.ecs_service_head.data.aws_region.current: Read complete after 0s [id=us-west-2]
module.ecs_service_head.module.container_definition["ray_head"].data.aws_region.current: Read complete after 0s [id=us-west-2]
module.ecs_service_head.data.aws_partition.current: Read complete after 0s [id=aws]
module.autoscaling_workers.data.aws_partition.current: Read complete after 0s [id=aws]
module.ecs_service_workers.data.aws_partition.current: Reading...
module.ecs_service_workers.data.aws_caller_identity.current: Reading...
module.ecs_service_head.data.aws_caller_identity.current: Reading...
data.aws_subnets.private: Reading...
data.aws_vpc.core_infra: Reading...
data.aws_ssm_parameter.ecs_optimized_ami: Reading...
module.ecs_service_workers.data.aws_partition.current: Read complete after 0s [id=aws]
module.ecs_service_workers.module.container_definition["ray_work"].data.aws_region.current: Reading...
module.ecs_service_workers.module.container_definition["ray_work"].data.aws_region.current: Read complete after 0s [id=us-west-2]
module.ecs_service_workers.data.aws_region.current: Reading...
module.ecs_service_workers.data.aws_region.current: Read complete after 0s [id=us-west-2]
module.autoscaling_head.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.autoscaling_head.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602]
module.autoscaling_workers.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.autoscaling_workers.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602]
data.aws_caller_identity.current: Read complete after 0s [id=142715460708]
module.ecs_service_workers.data.aws_caller_identity.current: Read complete after 0s [id=142715460708]
module.ecs_service_workers.data.aws_iam_policy_document.tasks_assume[0]: Reading...
module.ecs_service_workers.data.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=3270735054]
module.ecs_service_head.data.aws_caller_identity.current: Read complete after 0s [id=142715460708]
module.ecs_service_head.data.aws_iam_policy_document.tasks_assume[0]: Reading...
module.ecs_service_head.data.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=3270735054]
data.aws_ssm_parameter.ecs_optimized_ami: Read complete after 0s [id=/aws/service/ecs/optimized-ami/amazon-linux-2/recommended]
data.aws_ssm_parameter.ecs_gpu_optimized_ami: Read complete after 0s [id=/aws/service/ecs/optimized-ami/amazon-linux-2/gpu/recommended]
data.aws_service_discovery_dns_namespace.core_infra: Read complete after 0s [id=ns-45yknjg3wwygd2xr]
data.aws_subnets.private: Read complete after 0s [id=us-west-2]
module.ecs_service_head.data.aws_subnet.this[0]: Reading...
module.ecs_service_workers.data.aws_subnet.this[0]: Reading...
module.ecs_service_head.data.aws_subnet.this[0]: Read complete after 0s [id=subnet-0135326ea3ac0f457]
module.ecs_service_workers.data.aws_subnet.this[0]: Read complete after 1s [id=subnet-0135326ea3ac0f457]
data.aws_vpc.core_infra: Read complete after 1s [id=vpc-086770102a22a91bd]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  + create
 <= read (data resources)

Terraform will perform the following actions:

  # aws_iam_role.task_execution_role will be created
  + resource "aws_iam_role" "task_execution_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Condition = {
                          + ArnLike      = {
                              + "aws:SourceArn" = "arn:aws:ecs:us-west-2:142715460708:*"
                            }
                          + StringEquals = {
                              + "aws:SourceAccount" = "142715460708"
                            }
                        }
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ecs-tasks.amazonaws.com"
                        }
                      + Sid       = "ECSTasksAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = [
          + "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ]
      + max_session_duration  = 3600
      + name                  = "distributed_training_task_execution_role"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags                  = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # aws_placement_group.workers will be created
  + resource "aws_placement_group" "workers" {
      + arn                = (known after apply)
      + id                 = (known after apply)
      + name               = "ml-training"
      + partition_count    = (known after apply)
      + placement_group_id = (known after apply)
      + spread_level       = (known after apply)
      + strategy           = "cluster"
      + tags_all           = (known after apply)
    }

  # aws_s3_bucket.results will be created
  + resource "aws_s3_bucket" "results" {
      + acceleration_status         = (known after apply)
      + acl                         = (known after apply)
      + arn                         = (known after apply)
      + bucket                      = (known after apply)
      + bucket_domain_name          = (known after apply)
      + bucket_prefix               = (known after apply)
      + bucket_regional_domain_name = (known after apply)
      + force_destroy               = true
      + hosted_zone_id              = (known after apply)
      + id                          = (known after apply)
      + object_lock_enabled         = (known after apply)
      + policy                      = (known after apply)
      + region                      = (known after apply)
      + request_payer               = (known after apply)
      + tags                        = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all                    = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + website_domain              = (known after apply)
      + website_endpoint            = (known after apply)

      + cors_rule (known after apply)

      + grant (known after apply)

      + lifecycle_rule (known after apply)

      + logging (known after apply)

      + object_lock_configuration (known after apply)

      + replication_configuration (known after apply)

      + server_side_encryption_configuration (known after apply)

      + versioning (known after apply)

      + website (known after apply)
    }

  # aws_service_discovery_service.this will be created
  + resource "aws_service_discovery_service" "this" {
      + arn           = (known after apply)
      + force_destroy = false
      + id            = (known after apply)
      + name          = "head"
      + namespace_id  = (known after apply)
      + tags_all      = (known after apply)
      + type          = (known after apply)

      + dns_config {
          + namespace_id   = "ns-45yknjg3wwygd2xr"
          + routing_policy = "MULTIVALUE"

          + dns_records {
              + ttl  = 300
              + type = "A"
            }
        }
    }

  # random_id.bucket_name will be created
  + resource "random_id" "bucket_name" {
      + b64_std     = (known after apply)
      + b64_url     = (known after apply)
      + byte_length = 8
      + dec         = (known after apply)
      + hex         = (known after apply)
      + id          = (known after apply)
    }

  # module.autoscaling_head.aws_autoscaling_group.idc[0] will be created
  + resource "aws_autoscaling_group" "idc" {
      + arn                              = (known after apply)
      + availability_zones               = (known after apply)
      + default_cooldown                 = (known after apply)
      + desired_capacity                 = 1
      + force_delete                     = false
      + force_delete_warm_pool           = false
      + health_check_grace_period        = 300
      + health_check_type                = "EC2"
      + id                               = (known after apply)
      + ignore_failed_scaling_activities = false
      + load_balancers                   = (known after apply)
      + max_size                         = 1
      + metrics_granularity              = "1Minute"
      + min_size                         = 1
      + name                             = (known after apply)
      + name_prefix                      = "ecs-demo-distributed-ml-training-head-"
      + predicted_capacity               = (known after apply)
      + protect_from_scale_in            = false
      + service_linked_role_arn          = (known after apply)
      + target_group_arns                = (known after apply)
      + termination_policies             = []
      + vpc_zone_identifier              = [
          + "subnet-0135326ea3ac0f457",
        ]
      + wait_for_capacity_timeout        = "10m"
      + warm_pool_size                   = (known after apply)

      + availability_zone_distribution (known after apply)

      + capacity_reservation_specification (known after apply)

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = (known after apply)
        }

      + mixed_instances_policy (known after apply)

      + tag {
          + key                 = "AmazonECSManaged"
          + propagate_at_launch = true
          + value               = "true"
        }
      + tag {
          + key                 = "Blueprint"
          + propagate_at_launch = true
          + value               = "ecs-demo-distributed-ml-training"
        }
      + tag {
          + key                 = "GithubRepo"
          + propagate_at_launch = true
          + value               = "github.com/aws-ia/ecs-blueprints"
        }
      + tag {
          + key                 = "Name"
          + propagate_at_launch = true
          + value               = "ecs-demo-distributed-ml-training-head"
        }

      + timeouts {}

      + traffic_source (known after apply)
    }

  # module.autoscaling_head.aws_iam_instance_profile.this[0] will be created
  + resource "aws_iam_instance_profile" "this" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = "ecs-demo-distributed-ml-training-"
      + path        = "/"
      + role        = (known after apply)
      + tags        = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id   = (known after apply)
    }

  # module.autoscaling_head.aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "EC2AssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "ECS role for ecs-demo-distributed-ml-training"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "ecs-demo-distributed-ml-training-"
      + path                  = "/"
      + tags                  = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
      + role       = (known after apply)
    }

  # module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy"
      + role       = (known after apply)
    }

  # module.autoscaling_head.aws_launch_template.this[0] will be created
  + resource "aws_launch_template" "this" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + id                     = (known after apply)
      + image_id               = (sensitive value)
      + instance_type          = "m5.xlarge"
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "ecs-demo-distributed-ml-training-head-"
      + tags                   = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + user_data              = "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1lY3MtZGVtby1kaXN0cmlidXRlZC1tbC10cmFpbmluZwpFT0YK"
      + vpc_security_group_ids = (known after apply)

      + iam_instance_profile (known after apply)

      + metadata_options {
          + http_endpoint               = "enabled"
          + http_protocol_ipv6          = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = "required"
          + instance_metadata_tags      = (known after apply)
        }

      + monitoring {
          + enabled = true
        }
    }

  # module.autoscaling_sg.aws_security_group.this_name_prefix[0] will be created
  + resource "aws_security_group" "this_name_prefix" {
      + arn                    = (known after apply)
      + description            = "Autoscaling group security group"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "ecs-demo-distributed-ml-training-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "ecs-demo-distributed-ml-training"
        }
      + tags_all               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "ecs-demo-distributed-ml-training"
        }
      + vpc_id                 = "vpc-086770102a22a91bd"

      + timeouts {
          + create = "10m"
          + delete = "15m"
        }
    }

  # module.autoscaling_sg.aws_security_group_rule.egress_rules[0] will be created
  + resource "aws_security_group_rule" "egress_rules" {
      + cidr_blocks              = [
          + "0.0.0.0/0",
        ]
      + description              = "All protocols"
      + from_port                = -1
      + id                       = (known after apply)
      + ipv6_cidr_blocks         = [
          + "::/0",
        ]
      + prefix_list_ids          = []
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = -1
      + type                     = "egress"
    }

  # module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0] will be created
  + resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      + cidr_blocks              = [
          + "10.0.0.0/16",
        ]
      + description              = "Allow all from VPC CIDR block"
      + from_port                = -1
      + id                       = (known after apply)
      + prefix_list_ids          = []
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = -1
      + type                     = "ingress"
    }

  # module.autoscaling_workers.aws_autoscaling_group.idc[0] will be created
  + resource "aws_autoscaling_group" "idc" {
      + arn                              = (known after apply)
      + availability_zones               = (known after apply)
      + default_cooldown                 = (known after apply)
      + desired_capacity                 = 2
      + force_delete                     = false
      + force_delete_warm_pool           = false
      + health_check_grace_period        = 300
      + health_check_type                = "EC2"
      + id                               = (known after apply)
      + ignore_failed_scaling_activities = false
      + load_balancers                   = (known after apply)
      + max_size                         = 2
      + metrics_granularity              = "1Minute"
      + min_size                         = 2
      + name                             = (known after apply)
      + name_prefix                      = "ecs-demo-distributed-ml-training-workers-"
      + placement_group                  = "ml-training"
      + predicted_capacity               = (known after apply)
      + protect_from_scale_in            = false
      + service_linked_role_arn          = (known after apply)
      + target_group_arns                = (known after apply)
      + termination_policies             = []
      + vpc_zone_identifier              = [
          + "subnet-0135326ea3ac0f457",
        ]
      + wait_for_capacity_timeout        = "10m"
      + warm_pool_size                   = (known after apply)

      + availability_zone_distribution (known after apply)

      + capacity_reservation_specification (known after apply)

      + launch_template {
          + id      = (known after apply)
          + name    = (known after apply)
          + version = (known after apply)
        }

      + mixed_instances_policy (known after apply)

      + tag {
          + key                 = "AmazonECSManaged"
          + propagate_at_launch = true
          + value               = "true"
        }
      + tag {
          + key                 = "Blueprint"
          + propagate_at_launch = true
          + value               = "ecs-demo-distributed-ml-training"
        }
      + tag {
          + key                 = "GithubRepo"
          + propagate_at_launch = true
          + value               = "github.com/aws-ia/ecs-blueprints"
        }
      + tag {
          + key                 = "Name"
          + propagate_at_launch = true
          + value               = "ecs-demo-distributed-ml-training-workers"
        }

      + timeouts {}

      + traffic_source (known after apply)
    }

  # module.autoscaling_workers.aws_iam_instance_profile.this[0] will be created
  + resource "aws_iam_instance_profile" "this" {
      + arn         = (known after apply)
      + create_date = (known after apply)
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = "ecs-demo-distributed-ml-training-"
      + path        = "/"
      + role        = (known after apply)
      + tags        = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all    = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id   = (known after apply)
    }

  # module.autoscaling_workers.aws_iam_role.this[0] will be created
  + resource "aws_iam_role" "this" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ec2.amazonaws.com"
                        }
                      + Sid       = "EC2AssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "ECS role for ecs-demo-distributed-ml-training"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "ecs-demo-distributed-ml-training-"
      + path                  = "/"
      + tags                  = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role"
      + role       = (known after apply)
    }

  # module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"] will be created
  + resource "aws_iam_role_policy_attachment" "this" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy"
      + role       = (known after apply)
    }

  # module.autoscaling_workers.aws_launch_template.this[0] will be created
  + resource "aws_launch_template" "this" {
      + arn                    = (known after apply)
      + default_version        = (known after apply)
      + id                     = (known after apply)
      + image_id               = (sensitive value)
      + instance_type          = "g5.xlarge"
      + latest_version         = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "ecs-demo-distributed-ml-training-workers-"
      + tags                   = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + user_data              = "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1lY3MtZGVtby1kaXN0cmlidXRlZC1tbC10cmFpbmluZwpFT0YKZWNobyAiaXBfcmVzb2x2ZT00IiA+PiAvZXRjL3l1bS5jb25mCg=="
      + vpc_security_group_ids = (known after apply)

      + block_device_mappings {
          + device_name = "/dev/xvda"
          + no_device   = "0"

          + ebs {
              + delete_on_termination      = "true"
              + encrypted                  = "false"
              + iops                       = (known after apply)
              + throughput                 = (known after apply)
              + volume_initialization_rate = (known after apply)
              + volume_size                = 50
              + volume_type                = "gp2"
            }
        }

      + iam_instance_profile (known after apply)

      + metadata_options {
          + http_endpoint               = "enabled"
          + http_protocol_ipv6          = (known after apply)
          + http_put_response_hop_limit = (known after apply)
          + http_tokens                 = "required"
          + instance_metadata_tags      = (known after apply)
        }

      + monitoring {
          + enabled = true
        }
    }

  # module.ecs_cluster.aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + log_group_class   = (known after apply)
      + name              = "/aws/ecs/ecs-demo-distributed-ml-training"
      + name_prefix       = (known after apply)
      + retention_in_days = 90
      + skip_destroy      = false
      + tags              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all          = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
    }

  # module.ecs_cluster.aws_ecs_capacity_provider.this["distributed_ml_training_head"] will be created
  + resource "aws_ecs_capacity_provider" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "distributed_ml_training_head"
      + tags     = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }

      + auto_scaling_group_provider {
          + auto_scaling_group_arn         = (known after apply)
          + managed_draining               = (known after apply)
          + managed_termination_protection = (known after apply)

          + managed_scaling {
              + instance_warmup_period    = (known after apply)
              + maximum_scaling_step_size = 1
              + minimum_scaling_step_size = 1
              + status                    = "ENABLED"
              + target_capacity           = 60
            }
        }
    }

  # module.ecs_cluster.aws_ecs_capacity_provider.this["distributed_ml_training_workers"] will be created
  + resource "aws_ecs_capacity_provider" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "distributed_ml_training_workers"
      + tags     = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }

      + auto_scaling_group_provider {
          + auto_scaling_group_arn         = (known after apply)
          + managed_draining               = (known after apply)
          + managed_termination_protection = (known after apply)

          + managed_scaling {
              + instance_warmup_period    = (known after apply)
              + maximum_scaling_step_size = 1
              + minimum_scaling_step_size = 1
              + status                    = "ENABLED"
              + target_capacity           = 60
            }
        }
    }

  # module.ecs_cluster.aws_ecs_cluster.this[0] will be created
  + resource "aws_ecs_cluster" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + name     = "ecs-demo-distributed-ml-training"
      + tags     = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }

      + configuration {
          + execute_command_configuration {
              + logging = "DEFAULT"
            }
        }

      + setting {
          + name  = "containerInsights"
          + value = "enabled"
        }
    }

  # module.ecs_cluster.aws_ecs_cluster_capacity_providers.this[0] will be created
  + resource "aws_ecs_cluster_capacity_providers" "this" {
      + capacity_providers = [
          + "distributed_ml_training_head",
          + "distributed_ml_training_workers",
        ]
      + cluster_name       = "ecs-demo-distributed-ml-training"
      + id                 = (known after apply)

      + default_capacity_provider_strategy {
          + base              = 0
          + capacity_provider = "distributed_ml_training_workers"
          + weight            = 0
        }
      + default_capacity_provider_strategy {
          + base              = 1
          + capacity_provider = "distributed_ml_training_head"
          + weight            = 1
        }
    }

  # module.ecs_service_head.data.aws_ecs_task_definition.this[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_ecs_task_definition" "this" {
      + arn                      = (known after apply)
      + arn_without_revision     = (known after apply)
      + container_definitions    = (known after apply)
      + cpu                      = (known after apply)
      + enable_fault_injection   = (known after apply)
      + ephemeral_storage        = (known after apply)
      + execution_role_arn       = (known after apply)
      + family                   = (known after apply)
      + id                       = (known after apply)
      + inference_accelerator    = (known after apply)
      + ipc_mode                 = (known after apply)
      + memory                   = (known after apply)
      + network_mode             = (known after apply)
      + pid_mode                 = (known after apply)
      + placement_constraints    = (known after apply)
      + proxy_configuration      = (known after apply)
      + requires_compatibilities = (known after apply)
      + revision                 = (known after apply)
      + runtime_platform         = (known after apply)
      + status                   = (known after apply)
      + task_definition          = "distributed_ml_training_head_service"
      + task_role_arn            = (known after apply)
      + volume                   = (known after apply)
    }

  # module.ecs_service_head.data.aws_iam_policy_document.tasks[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "tasks" {
      + id            = (known after apply)
      + json          = (known after apply)
      + minified_json = (known after apply)

      + statement {
          + actions   = [
              + "s3:*",
            ]
          + resources = (known after apply)
        }
    }

  # module.ecs_service_head.aws_ecs_service.this[0] will be created
  + resource "aws_ecs_service" "this" {
      + availability_zone_rebalancing      = "DISABLED"
      + cluster                            = (known after apply)
      + deployment_maximum_percent         = 200
      + deployment_minimum_healthy_percent = 0
      + desired_count                      = 1
      + enable_ecs_managed_tags            = true
      + enable_execute_command             = false
      + force_new_deployment               = true
      + iam_role                           = (known after apply)
      + id                                 = (known after apply)
      + launch_type                        = (known after apply)
      + name                               = "distributed_ml_training_head_service"
      + platform_version                   = (known after apply)
      + scheduling_strategy                = "REPLICA"
      + tags                               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all                           = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + task_definition                    = (known after apply)
      + triggers                           = (known after apply)
      + wait_for_steady_state              = false

      + capacity_provider_strategy {
          + base              = 1
          + capacity_provider = "distributed_ml_training_head"
          + weight            = 1
        }

      + network_configuration {
          + assign_public_ip = false
          + security_groups  = (known after apply)
          + subnets          = [
              + "subnet-0135326ea3ac0f457",
            ]
        }

      + service_registries {
          + registry_arn = (known after apply)
        }

      + timeouts {}
    }

  # module.ecs_service_head.aws_ecs_task_definition.this[0] will be created
  + resource "aws_ecs_task_definition" "this" {
      + arn                      = (known after apply)
      + arn_without_revision     = (known after apply)
      + container_definitions    = jsonencode(
            [
              + {
                  + command                = [
                      + "/bin/bash",
                      + "-lc",
                      + "--",
                      + "ulimit -n 65536; ray start --head --dashboard-host=0.0.0.0 --metrics-export-port=8080 --num-cpus=0 --memory=10737418240 --block",
                    ]
                  + cpu                    = 3072
                  + environment            = []
                  + image                  = "docker.io/rayproject/ray-ml:2.7.1.artur.c9f4c6-py38"
                  + interactive            = false
                  + linuxParameters        = {
                      + initProcessEnabled = false
                      + sharedMemorySize   = 20480
                    }
                  + logConfiguration       = {
                      + logDriver = "awslogs"
                      + options   = {
                          + awslogs-group         = "/aws/ecs/distributed_ml_training_head_service/ray_head"
                          + awslogs-region        = "us-west-2"
                          + awslogs-stream-prefix = "ecs"
                        }
                    }
                  + memory                 = 10240
                  + memoryReservation      = 10240
                  + mountPoints            = [
                      + {
                          + containerPath = "/tmp"
                          + readOnly      = false
                          + sourceVolume  = "tmp"
                        },
                    ]
                  + name                   = "ray_head"
                  + portMappings           = []
                  + privileged             = false
                  + pseudoTerminal         = false
                  + readonlyRootFilesystem = false
                  + startTimeout           = 30
                  + stopTimeout            = 120
                  + systemControls         = []
                  + user                   = "1000"
                  + volumesFrom            = []
                },
            ]
        )
      + cpu                      = "3072"
      + enable_fault_injection   = (known after apply)
      + execution_role_arn       = (known after apply)
      + family                   = "distributed_ml_training_head_service"
      + id                       = (known after apply)
      + memory                   = "10240"
      + network_mode             = "awsvpc"
      + requires_compatibilities = [
          + "EC2",
        ]
      + revision                 = (known after apply)
      + skip_destroy             = false
      + tags                     = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all                 = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + task_role_arn            = (known after apply)
      + track_latest             = false

      + runtime_platform {
          + cpu_architecture        = "X86_64"
          + operating_system_family = "LINUX"
        }

      + volume {
          + configure_at_launch = (known after apply)
          + name                = "tmp"
            # (1 unchanged attribute hidden)
        }
    }

  # module.ecs_service_head.aws_iam_role.tasks[0] will be created
  + resource "aws_iam_role" "tasks" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Condition = {
                          + ArnLike      = {
                              + "aws:SourceArn" = "arn:aws:ecs:us-west-2:142715460708:*"
                            }
                          + StringEquals = {
                              + "aws:SourceAccount" = "142715460708"
                            }
                        }
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ecs-tasks.amazonaws.com"
                        }
                      + Sid       = "ECSTasksAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "Task role for ecs-demo-distributed-ml-training"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "taskRole-"
      + path                  = "/"
      + tags                  = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # module.ecs_service_head.aws_iam_role_policy.tasks[0] will be created
  + resource "aws_iam_role_policy" "tasks" {
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = "taskRole-"
      + policy      = (known after apply)
      + role        = (known after apply)
    }

  # module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"] will be created
  + resource "aws_iam_role_policy_attachment" "tasks" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess"
      + role       = (known after apply)
    }

  # module.ecs_service_head.aws_security_group.this[0] will be created
  + resource "aws_security_group" "this" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "distributed_ml_training_head_service-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "distributed_ml_training_head_service"
        }
      + tags_all               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "distributed_ml_training_head_service"
        }
      + vpc_id                 = "vpc-086770102a22a91bd"
    }

  # module.ecs_service_head.aws_security_group_rule.this["egress_all"] will be created
  + resource "aws_security_group_rule" "this" {
      + cidr_blocks              = [
          + "0.0.0.0/0",
        ]
      + from_port                = 0
      + id                       = (known after apply)
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 0
      + type                     = "egress"
    }

  # module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"] will be created
  + resource "aws_security_group_rule" "this" {
      + cidr_blocks              = [
          + "10.0.0.0/8",
        ]
      + from_port                = 0
      + id                       = (known after apply)
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 0
      + type                     = "ingress"
    }

  # module.ecs_service_workers.data.aws_ecs_task_definition.this[0] will be read during apply
  # (depends on a resource or a module with changes pending)
 <= data "aws_ecs_task_definition" "this" {
      + arn                      = (known after apply)
      + arn_without_revision     = (known after apply)
      + container_definitions    = (known after apply)
      + cpu                      = (known after apply)
      + enable_fault_injection   = (known after apply)
      + ephemeral_storage        = (known after apply)
      + execution_role_arn       = (known after apply)
      + family                   = (known after apply)
      + id                       = (known after apply)
      + inference_accelerator    = (known after apply)
      + ipc_mode                 = (known after apply)
      + memory                   = (known after apply)
      + network_mode             = (known after apply)
      + pid_mode                 = (known after apply)
      + placement_constraints    = (known after apply)
      + proxy_configuration      = (known after apply)
      + requires_compatibilities = (known after apply)
      + revision                 = (known after apply)
      + runtime_platform         = (known after apply)
      + status                   = (known after apply)
      + task_definition          = "distributed_ml_training_worker_service"
      + task_role_arn            = (known after apply)
      + volume                   = (known after apply)
    }

  # module.ecs_service_workers.data.aws_iam_policy_document.tasks[0] will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_policy_document" "tasks" {
      + id            = (known after apply)
      + json          = (known after apply)
      + minified_json = (known after apply)

      + statement {
          + actions   = [
              + "s3:*",
            ]
          + resources = (known after apply)
        }
    }

  # module.ecs_service_workers.aws_ecs_service.this[0] will be created
  + resource "aws_ecs_service" "this" {
      + availability_zone_rebalancing      = "DISABLED"
      + cluster                            = (known after apply)
      + deployment_maximum_percent         = 200
      + deployment_minimum_healthy_percent = 0
      + desired_count                      = 2
      + enable_ecs_managed_tags            = true
      + enable_execute_command             = false
      + force_new_deployment               = true
      + iam_role                           = (known after apply)
      + id                                 = (known after apply)
      + launch_type                        = (known after apply)
      + name                               = "distributed_ml_training_worker_service"
      + platform_version                   = (known after apply)
      + scheduling_strategy                = "REPLICA"
      + tags                               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all                           = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + task_definition                    = (known after apply)
      + triggers                           = (known after apply)
      + wait_for_steady_state              = false

      + capacity_provider_strategy {
          + base              = 1
          + capacity_provider = "distributed_ml_training_workers"
          + weight            = 1
        }

      + network_configuration {
          + assign_public_ip = false
          + security_groups  = (known after apply)
          + subnets          = [
              + "subnet-0135326ea3ac0f457",
            ]
        }

      + timeouts {}
    }

  # module.ecs_service_workers.aws_ecs_task_definition.this[0] will be created
  + resource "aws_ecs_task_definition" "this" {
      + arn                      = (known after apply)
      + arn_without_revision     = (known after apply)
      + container_definitions    = jsonencode(
            [
              + {
                  + command                = [
                      + "/bin/bash",
                      + "-lc",
                      + "--",
                      + "ulimit -n 65536; ray start --block --num-cpus=3 --num-gpus=1 --address=head.default.core-infra.local:6379 --metrics-export-port=8080 --memory=15032385536",
                    ]
                  + cpu                    = 3072
                  + environment            = []
                  + image                  = "docker.io/rayproject/ray-ml:2.7.1.artur.c9f4c6-py38-gpu"
                  + interactive            = false
                  + linuxParameters        = {
                      + initProcessEnabled = false
                      + sharedMemorySize   = 10240
                    }
                  + logConfiguration       = {
                      + logDriver = "awslogs"
                      + options   = {
                          + awslogs-group         = "/aws/ecs/distributed_ml_training_worker_service/ray_work"
                          + awslogs-region        = "us-west-2"
                          + awslogs-stream-prefix = "ecs"
                        }
                    }
                  + memory                 = 15360
                  + memoryReservation      = 15360
                  + mountPoints            = [
                      + {
                          + containerPath = "/tmp"
                          + readOnly      = false
                          + sourceVolume  = "tmp"
                        },
                    ]
                  + name                   = "ray_work"
                  + portMappings           = []
                  + privileged             = false
                  + pseudoTerminal         = false
                  + readonlyRootFilesystem = false
                  + resourceRequirements   = [
                      + {
                          + type  = "GPU"
                          + value = "1"
                        },
                    ]
                  + startTimeout           = 30
                  + stopTimeout            = 120
                  + systemControls         = []
                  + user                   = "1000"
                  + volumesFrom            = []
                },
            ]
        )
      + cpu                      = "3072"
      + enable_fault_injection   = (known after apply)
      + execution_role_arn       = (known after apply)
      + family                   = "distributed_ml_training_worker_service"
      + id                       = (known after apply)
      + memory                   = "15360"
      + network_mode             = "awsvpc"
      + requires_compatibilities = [
          + "EC2",
        ]
      + revision                 = (known after apply)
      + skip_destroy             = false
      + tags                     = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all                 = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + task_role_arn            = (known after apply)
      + track_latest             = false

      + runtime_platform {
          + cpu_architecture        = "X86_64"
          + operating_system_family = "LINUX"
        }

      + volume {
          + configure_at_launch = (known after apply)
          + name                = "tmp"
            # (1 unchanged attribute hidden)
        }
    }

  # module.ecs_service_workers.aws_iam_role.tasks[0] will be created
  + resource "aws_iam_role" "tasks" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Condition = {
                          + ArnLike      = {
                              + "aws:SourceArn" = "arn:aws:ecs:us-west-2:142715460708:*"
                            }
                          + StringEquals = {
                              + "aws:SourceAccount" = "142715460708"
                            }
                        }
                      + Effect    = "Allow"
                      + Principal = {
                          + Service = "ecs-tasks.amazonaws.com"
                        }
                      + Sid       = "ECSTasksAssumeRole"
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + description           = "Task role for ecs-demo-distributed-ml-training"
      + force_detach_policies = true
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = (known after apply)
      + name_prefix           = "taskRole-"
      + path                  = "/"
      + tags                  = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + unique_id             = (known after apply)

      + inline_policy (known after apply)
    }

  # module.ecs_service_workers.aws_iam_role_policy.tasks[0] will be created
  + resource "aws_iam_role_policy" "tasks" {
      + id          = (known after apply)
      + name        = (known after apply)
      + name_prefix = "taskRole-"
      + policy      = (known after apply)
      + role        = (known after apply)
    }

  # module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"] will be created
  + resource "aws_iam_role_policy_attachment" "tasks" {
      + id         = (known after apply)
      + policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess"
      + role       = (known after apply)
    }

  # module.ecs_service_workers.aws_security_group.this[0] will be created
  + resource "aws_security_group" "this" {
      + arn                    = (known after apply)
      + description            = "Managed by Terraform"
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = "distributed_ml_training_worker_service-"
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "distributed_ml_training_worker_service"
        }
      + tags_all               = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          + "Name"       = "distributed_ml_training_worker_service"
        }
      + vpc_id                 = "vpc-086770102a22a91bd"
    }

  # module.ecs_service_workers.aws_security_group_rule.this["egress_all"] will be created
  + resource "aws_security_group_rule" "this" {
      + cidr_blocks              = [
          + "0.0.0.0/0",
        ]
      + from_port                = 0
      + id                       = (known after apply)
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 0
      + type                     = "egress"
    }

  # module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"] will be created
  + resource "aws_security_group_rule" "this" {
      + cidr_blocks              = [
          + "10.0.0.0/8",
        ]
      + from_port                = 0
      + id                       = (known after apply)
      + protocol                 = "-1"
      + security_group_id        = (known after apply)
      + security_group_rule_id   = (known after apply)
      + self                     = false
      + source_security_group_id = (known after apply)
      + to_port                  = 0
      + type                     = "ingress"
    }

  # module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + log_group_class   = (known after apply)
      + name              = "/aws/ecs/distributed_ml_training_head_service/ray_head"
      + name_prefix       = (known after apply)
      + retention_in_days = 14
      + skip_destroy      = false
      + tags              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all          = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
    }

  # module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0] will be created
  + resource "aws_cloudwatch_log_group" "this" {
      + arn               = (known after apply)
      + id                = (known after apply)
      + log_group_class   = (known after apply)
      + name              = "/aws/ecs/distributed_ml_training_worker_service/ray_work"
      + name_prefix       = (known after apply)
      + retention_in_days = 14
      + skip_destroy      = false
      + tags              = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
      + tags_all          = {
          + "Blueprint"  = "ecs-demo-distributed-ml-training"
          + "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        }
    }

Plan: 43 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cluster_arn = (known after apply)
  + s3_bucket   = (known after apply)
╷
│ Warning: Argument is deprecated
│ 
│   with aws_iam_role.task_execution_role,
│   on main.tf line 442, in resource "aws_iam_role" "task_execution_role":
│  442:   managed_policy_arns = [
│  443:     "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
│  444:   ]
│ 
│ managed_policy_arns is deprecated. Use the aws_iam_role_policy_attachment resource instead. If Terraform should exclusively manage all managed
│ policy attachments (the current behavior of this argument), use the aws_iam_role_policy_attachments_exclusive resource as well.
│ 
│ (and one more similar warning elsewhere)
╵

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

random_id.bucket_name: Creating...
random_id.bucket_name: Creation complete after 0s [id=Cz2U_9nImPo]
aws_placement_group.workers: Creating...
module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0]: Creating...
module.ecs_cluster.aws_cloudwatch_log_group.this[0]: Creating...
module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0]: Creating...
aws_service_discovery_service.this: Creating...
module.autoscaling_workers.aws_iam_role.this[0]: Creating...
module.autoscaling_head.aws_iam_role.this[0]: Creating...
aws_iam_role.task_execution_role: Creating...
module.autoscaling_sg.aws_security_group.this_name_prefix[0]: Creating...
aws_s3_bucket.results: Creating...
module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0]: Creation complete after 0s [id=/aws/ecs/distributed_ml_training_worker_service/ray_work]
module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0]: Creation complete after 0s [id=/aws/ecs/distributed_ml_training_head_service/ray_head]
aws_service_discovery_service.this: Creation complete after 0s [id=srv-ni27vf7ik7oy2duo]
module.ecs_cluster.aws_cloudwatch_log_group.this[0]: Creation complete after 0s [id=/aws/ecs/ecs-demo-distributed-ml-training]
module.ecs_service_workers.aws_security_group.this[0]: Creating...
module.ecs_service_head.aws_security_group.this[0]: Creating...
module.ecs_service_head.aws_iam_role.tasks[0]: Creating...
module.ecs_service_workers.aws_iam_role.tasks[0]: Creating...
aws_placement_group.workers: Creation complete after 1s [id=ml-training]
module.ecs_cluster.aws_ecs_cluster.this[0]: Creating...
module.autoscaling_head.aws_iam_role.this[0]: Creation complete after 1s [id=ecs-demo-distributed-ml-training-20250814050850894800000003]
module.autoscaling_head.aws_iam_instance_profile.this[0]: Creating...
module.autoscaling_workers.aws_iam_role.this[0]: Creation complete after 1s [id=ecs-demo-distributed-ml-training-20250814050850894700000002]
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Creating...
module.ecs_service_workers.aws_iam_role.tasks[0]: Creation complete after 1s [id=taskRole-20250814050851388000000008]
module.ecs_service_head.aws_iam_role.tasks[0]: Creation complete after 1s [id=taskRole-20250814050851385000000007]
aws_iam_role.task_execution_role: Creation complete after 1s [id=distributed_training_task_execution_role]
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Creating...
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Creating...
module.autoscaling_workers.aws_iam_instance_profile.this[0]: Creating...
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Creation complete after 0s [id=ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085207230000000b]
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Creating...
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Creation complete after 0s [id=ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085222610000000c]
module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Creating...
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Creation complete after 0s [id=ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085234980000000d]
module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Creating...
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Creation complete after 1s [id=ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085240490000000e]
module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Creation complete after 1s [id=taskRole-20250814050851388000000008-2025081405085251180000000f]
module.ecs_service_workers.aws_ecs_task_definition.this[0]: Creating...
module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Creation complete after 1s [id=taskRole-20250814050851385000000007-20250814050852635200000010]
module.ecs_service_head.aws_ecs_task_definition.this[0]: Creating...
module.ecs_service_workers.aws_ecs_task_definition.this[0]: Creation complete after 0s [id=distributed_ml_training_worker_service]
module.ecs_service_head.aws_ecs_task_definition.this[0]: Creation complete after 0s [id=distributed_ml_training_head_service]
aws_s3_bucket.results: Creation complete after 2s [id=dt-results-0b3d94ffd9c898fa]
module.ecs_service_workers.data.aws_ecs_task_definition.this[0]: Reading...
module.autoscaling_sg.aws_security_group.this_name_prefix[0]: Creation complete after 2s [id=sg-0179f0d43663e3a7b]
module.ecs_service_head.data.aws_ecs_task_definition.this[0]: Reading...
module.ecs_service_head.data.aws_iam_policy_document.tasks[0]: Reading...
module.ecs_service_workers.data.aws_iam_policy_document.tasks[0]: Reading...
module.ecs_service_workers.data.aws_iam_policy_document.tasks[0]: Read complete after 0s [id=1623405521]
module.ecs_service_head.data.aws_iam_policy_document.tasks[0]: Read complete after 0s [id=1623405521]
module.autoscaling_sg.aws_security_group_rule.egress_rules[0]: Creating...
module.ecs_service_workers.data.aws_ecs_task_definition.this[0]: Read complete after 0s [id=arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_worker_service:1]
module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0]: Creating...
module.ecs_service_head.data.aws_ecs_task_definition.this[0]: Read complete after 0s [id=arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_head_service:1]
module.ecs_service_workers.aws_security_group.this[0]: Creation complete after 2s [id=sg-0e6e8cc594210a9b8]
module.ecs_service_head.aws_security_group.this[0]: Creation complete after 2s [id=sg-06ec565a9fbe6a6d0]
module.ecs_service_workers.aws_iam_role_policy.tasks[0]: Creating...
module.ecs_service_head.aws_iam_role_policy.tasks[0]: Creating...
module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"]: Creating...
module.ecs_service_workers.aws_security_group_rule.this["egress_all"]: Creating...
module.ecs_service_head.aws_security_group_rule.this["egress_all"]: Creating...
module.ecs_service_head.aws_iam_role_policy.tasks[0]: Creation complete after 1s [id=taskRole-20250814050851385000000007:taskRole-20250814050853253800000012]
module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"]: Creating...
module.ecs_service_workers.aws_iam_role_policy.tasks[0]: Creation complete after 1s [id=taskRole-20250814050851388000000008:taskRole-20250814050853252400000011]
module.autoscaling_sg.aws_security_group_rule.egress_rules[0]: Creation complete after 1s [id=sgrule-3239102946]
module.ecs_service_workers.aws_security_group_rule.this["egress_all"]: Creation complete after 1s [id=sgrule-3578778963]
module.ecs_service_head.aws_security_group_rule.this["egress_all"]: Creation complete after 1s [id=sgrule-3336488489]
module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0]: Creation complete after 1s [id=sgrule-200943429]
module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"]: Creation complete after 0s [id=sgrule-3248105196]
module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"]: Creation complete after 1s [id=sgrule-2431968735]
module.autoscaling_head.aws_iam_instance_profile.this[0]: Creation complete after 6s [id=ecs-demo-distributed-ml-training-20250814050851823000000009]
module.autoscaling_head.aws_launch_template.this[0]: Creating...
module.autoscaling_workers.aws_iam_instance_profile.this[0]: Creation complete after 6s [id=ecs-demo-distributed-ml-training-2025081405085206470000000a]
module.autoscaling_workers.aws_launch_template.this[0]: Creating...
module.ecs_cluster.aws_ecs_cluster.this[0]: Still creating... [00m10s elapsed]
module.ecs_cluster.aws_ecs_cluster.this[0]: Creation complete after 10s [id=arn:aws:ecs:us-west-2:142715460708:cluster/ecs-demo-distributed-ml-training]
module.autoscaling_head.aws_launch_template.this[0]: Creation complete after 6s [id=lt-0b866d5e9e99023f4]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Creating...
module.autoscaling_workers.aws_launch_template.this[0]: Creation complete after 6s [id=lt-082e25a9d057df249]
module.autoscaling_workers.aws_autoscaling_group.idc[0]: Creating...
╷
│ Warning: Argument is deprecated
│ 
│   with aws_iam_role.task_execution_role,
│   on main.tf line 442, in resource "aws_iam_role" "task_execution_role":
│  442:   managed_policy_arns = [
│  443:     "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
│  444:   ]
│ 
│ managed_policy_arns is deprecated. Use the aws_iam_role_policy_attachment resource instead. If Terraform should exclusively manage all managed
│ policy attachments (the current behavior of this argument), use the aws_iam_role_policy_attachments_exclusive resource as well.
╵
╷
│ Error: waiting for Auto Scaling Group (ecs-demo-distributed-ml-training-head-20250814050903807300000017) capacity satisfied: scaling activity (6536629b-ed8c-5cde-03dc-784a80708be3): Failed: Authentication Failure. Launching EC2 instance failed.
│ 
│   with module.autoscaling_head.aws_autoscaling_group.idc[0],
│   on .terraform/modules/autoscaling_head/main.tf line 655, in resource "aws_autoscaling_group" "idc":
│  655: resource "aws_autoscaling_group" "idc" {
│ 
╵
╷
│ Error: waiting for Auto Scaling Group (ecs-demo-distributed-ml-training-workers-20250814050904058900000018) capacity satisfied: scaling activity (0266629b-ed90-7dee-0bea-971a4a37fade): Failed: Authentication Failure. Launching EC2 instance failed.
│ 
│   with module.autoscaling_workers.aws_autoscaling_group.idc[0],
│   on .terraform/modules/autoscaling_workers/main.tf line 655, in resource "aws_autoscaling_group" "idc":
│  655: resource "aws_autoscaling_group" "idc" {
│ 
╵
user-2:distributed-ml-training user$ terraform destroy
random_id.bucket_name: Refreshing state... [id=Cz2U_9nImPo]
data.aws_vpc.core_infra: Reading...
module.ecs_service_workers.module.container_definition["ray_work"].data.aws_region.current: Reading...
data.aws_service_discovery_dns_namespace.core_infra: Reading...
data.aws_subnets.private: Reading...
module.ecs_service_head.data.aws_region.current: Reading...
data.aws_caller_identity.current: Reading...
module.autoscaling_head.data.aws_partition.current: Reading...
module.ecs_service_head.data.aws_caller_identity.current: Reading...
aws_placement_group.workers: Refreshing state... [id=ml-training]
module.ecs_service_head.data.aws_region.current: Read complete after 0s [id=us-west-2]
module.ecs_service_workers.module.container_definition["ray_work"].data.aws_region.current: Read complete after 0s [id=us-west-2]
module.autoscaling_head.data.aws_partition.current: Read complete after 0s [id=aws]
aws_s3_bucket.results: Refreshing state... [id=dt-results-0b3d94ffd9c898fa]
data.aws_ssm_parameter.ecs_optimized_ami: Reading...
module.ecs_service_head.data.aws_partition.current: Reading...
module.ecs_service_workers.data.aws_caller_identity.current: Reading...
module.ecs_service_head.data.aws_partition.current: Read complete after 0s [id=aws]
module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0]: Refreshing state... [id=/aws/ecs/distributed_ml_training_head_service/ray_head]
data.aws_caller_identity.current: Read complete after 0s [id=142715460708]
data.aws_ssm_parameter.ecs_gpu_optimized_ami: Reading...
module.ecs_service_head.data.aws_caller_identity.current: Read complete after 0s [id=142715460708]
module.ecs_cluster.aws_cloudwatch_log_group.this[0]: Refreshing state... [id=/aws/ecs/ecs-demo-distributed-ml-training]
module.ecs_service_workers.data.aws_caller_identity.current: Read complete after 0s [id=142715460708]
module.ecs_service_head.module.container_definition["ray_head"].data.aws_region.current: Reading...
module.ecs_service_head.module.container_definition["ray_head"].data.aws_region.current: Read complete after 0s [id=us-west-2]
module.ecs_service_workers.data.aws_region.current: Reading...
module.ecs_service_workers.data.aws_region.current: Read complete after 0s [id=us-west-2]
module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0]: Refreshing state... [id=/aws/ecs/distributed_ml_training_worker_service/ray_work]
data.aws_ssm_parameter.ecs_optimized_ami: Read complete after 1s [id=/aws/service/ecs/optimized-ami/amazon-linux-2/recommended]
module.ecs_service_workers.data.aws_partition.current: Reading...
module.ecs_service_workers.data.aws_partition.current: Read complete after 0s [id=aws]
module.autoscaling_workers.data.aws_partition.current: Reading...
module.autoscaling_workers.data.aws_partition.current: Read complete after 0s [id=aws]
module.autoscaling_head.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.autoscaling_head.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602]
data.aws_ssm_parameter.ecs_gpu_optimized_ami: Read complete after 1s [id=/aws/service/ecs/optimized-ami/amazon-linux-2/gpu/recommended]
aws_iam_role.task_execution_role: Refreshing state... [id=distributed_training_task_execution_role]
module.autoscaling_workers.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.autoscaling_workers.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602]
module.autoscaling_head.aws_iam_role.this[0]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050850894800000003]
module.ecs_service_head.data.aws_iam_policy_document.tasks_assume[0]: Reading...
module.ecs_service_head.data.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=3270735054]
module.ecs_service_workers.data.aws_iam_policy_document.tasks_assume[0]: Reading...
module.ecs_service_workers.data.aws_iam_policy_document.tasks_assume[0]: Read complete after 0s [id=3270735054]
module.autoscaling_workers.aws_iam_role.this[0]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050850894700000002]
module.ecs_service_head.aws_iam_role.tasks[0]: Refreshing state... [id=taskRole-20250814050851385000000007]
module.ecs_service_workers.aws_iam_role.tasks[0]: Refreshing state... [id=taskRole-20250814050851388000000008]
module.ecs_cluster.aws_ecs_cluster.this[0]: Refreshing state... [id=arn:aws:ecs:us-west-2:142715460708:cluster/ecs-demo-distributed-ml-training]
data.aws_service_discovery_dns_namespace.core_infra: Read complete after 1s [id=ns-45yknjg3wwygd2xr]
aws_service_discovery_service.this: Refreshing state... [id=srv-ni27vf7ik7oy2duo]
data.aws_subnets.private: Read complete after 1s [id=us-west-2]
module.ecs_service_head.data.aws_subnet.this[0]: Reading...
module.ecs_service_workers.data.aws_subnet.this[0]: Reading...
module.ecs_service_head.data.aws_subnet.this[0]: Read complete after 0s [id=subnet-0135326ea3ac0f457]
module.ecs_service_head.aws_security_group.this[0]: Refreshing state... [id=sg-06ec565a9fbe6a6d0]
module.ecs_service_workers.data.aws_subnet.this[0]: Read complete after 0s [id=subnet-0135326ea3ac0f457]
module.ecs_service_workers.aws_security_group.this[0]: Refreshing state... [id=sg-0e6e8cc594210a9b8]
module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"]: Refreshing state... [id=sgrule-3248105196]
module.ecs_service_head.aws_security_group_rule.this["egress_all"]: Refreshing state... [id=sgrule-3336488489]
module.ecs_service_workers.aws_security_group_rule.this["egress_all"]: Refreshing state... [id=sgrule-3578778963]
module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"]: Refreshing state... [id=sgrule-2431968735]
module.ecs_service_workers.data.aws_iam_policy_document.tasks[0]: Reading...
module.ecs_service_workers.data.aws_iam_policy_document.tasks[0]: Read complete after 0s [id=1623405521]
module.ecs_service_head.data.aws_iam_policy_document.tasks[0]: Reading...
module.ecs_service_head.data.aws_iam_policy_document.tasks[0]: Read complete after 0s [id=1623405521]
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085207230000000b]
module.autoscaling_head.aws_iam_instance_profile.this[0]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050851823000000009]
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085222610000000c]
data.aws_vpc.core_infra: Read complete after 1s [id=vpc-086770102a22a91bd]
module.autoscaling_workers.aws_iam_instance_profile.this[0]: Refreshing state... [id=ecs-demo-distributed-ml-training-2025081405085206470000000a]
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085240490000000e]
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Refreshing state... [id=ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085234980000000d]
module.autoscaling_sg.aws_security_group.this_name_prefix[0]: Refreshing state... [id=sg-0179f0d43663e3a7b]
module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Refreshing state... [id=taskRole-20250814050851385000000007-20250814050852635200000010]
module.ecs_service_head.aws_iam_role_policy.tasks[0]: Refreshing state... [id=taskRole-20250814050851385000000007:taskRole-20250814050853253800000012]
module.ecs_service_workers.aws_iam_role_policy.tasks[0]: Refreshing state... [id=taskRole-20250814050851388000000008:taskRole-20250814050853252400000011]
module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Refreshing state... [id=taskRole-20250814050851388000000008-2025081405085251180000000f]
module.autoscaling_sg.aws_security_group_rule.egress_rules[0]: Refreshing state... [id=sgrule-3239102946]
module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0]: Refreshing state... [id=sgrule-200943429]
module.autoscaling_head.aws_launch_template.this[0]: Refreshing state... [id=lt-0b866d5e9e99023f4]
module.ecs_service_head.aws_ecs_task_definition.this[0]: Refreshing state... [id=distributed_ml_training_head_service]
module.autoscaling_workers.aws_launch_template.this[0]: Refreshing state... [id=lt-082e25a9d057df249]
module.ecs_service_head.data.aws_ecs_task_definition.this[0]: Reading...
module.ecs_service_workers.aws_ecs_task_definition.this[0]: Refreshing state... [id=distributed_ml_training_worker_service]
module.ecs_service_head.data.aws_ecs_task_definition.this[0]: Read complete after 0s [id=arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_head_service:1]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Refreshing state... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017]
module.ecs_service_workers.data.aws_ecs_task_definition.this[0]: Reading...
module.autoscaling_workers.aws_autoscaling_group.idc[0]: Refreshing state... [id=ecs-demo-distributed-ml-training-workers-20250814050904058900000018]
module.ecs_service_workers.data.aws_ecs_task_definition.this[0]: Read complete after 0s [id=arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_worker_service:1]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_iam_role.task_execution_role will be destroyed
  - resource "aws_iam_role" "task_execution_role" {
      - arn                   = "arn:aws:iam::142715460708:role/distributed_training_task_execution_role" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Condition = {
                          - ArnLike      = {
                              - "aws:SourceArn" = "arn:aws:ecs:us-west-2:142715460708:*"
                            }
                          - StringEquals = {
                              - "aws:SourceAccount" = "142715460708"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ecs-tasks.amazonaws.com"
                        }
                      - Sid       = "ECSTasksAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-08-14T05:08:51Z" -> null
      - force_detach_policies = false -> null
      - id                    = "distributed_training_task_execution_role" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "distributed_training_task_execution_role" -> null
      - path                  = "/" -> null
      - tags                  = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id             = "AROASCOUBDRSBETI4PHDE" -> null
        # (3 unchanged attributes hidden)
    }

  # aws_placement_group.workers will be destroyed
  - resource "aws_placement_group" "workers" {
      - arn                = "arn:aws:ec2:us-west-2:142715460708:placement-group/ml-training" -> null
      - id                 = "ml-training" -> null
      - name               = "ml-training" -> null
      - partition_count    = 0 -> null
      - placement_group_id = "pg-08cb7d5d20879e972" -> null
      - strategy           = "cluster" -> null
      - tags               = {} -> null
      - tags_all           = {} -> null
        # (1 unchanged attribute hidden)
    }

  # aws_s3_bucket.results will be destroyed
  - resource "aws_s3_bucket" "results" {
      - arn                         = "arn:aws:s3:::dt-results-0b3d94ffd9c898fa" -> null
      - bucket                      = "dt-results-0b3d94ffd9c898fa" -> null
      - bucket_domain_name          = "dt-results-0b3d94ffd9c898fa.s3.amazonaws.com" -> null
      - bucket_regional_domain_name = "dt-results-0b3d94ffd9c898fa.s3.us-west-2.amazonaws.com" -> null
      - force_destroy               = true -> null
      - hosted_zone_id              = "Z3BJ6K6RIION7M" -> null
      - id                          = "dt-results-0b3d94ffd9c898fa" -> null
      - object_lock_enabled         = false -> null
      - region                      = "us-west-2" -> null
      - request_payer               = "BucketOwner" -> null
      - tags                        = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all                    = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
        # (3 unchanged attributes hidden)

      - grant {
          - id          = "e0cdc3bc169a0feafbd85dedf6bd363fe2f9be2e10be798e729ab54eb4a0cb38" -> null
          - permissions = [
              - "FULL_CONTROL",
            ] -> null
          - type        = "CanonicalUser" -> null
            # (1 unchanged attribute hidden)
        }

      - server_side_encryption_configuration {
          - rule {
              - bucket_key_enabled = false -> null

              - apply_server_side_encryption_by_default {
                  - sse_algorithm     = "AES256" -> null
                    # (1 unchanged attribute hidden)
                }
            }
        }

      - versioning {
          - enabled    = false -> null
          - mfa_delete = false -> null
        }
    }

  # aws_service_discovery_service.this will be destroyed
  - resource "aws_service_discovery_service" "this" {
      - arn           = "arn:aws:servicediscovery:us-west-2:142715460708:service/srv-ni27vf7ik7oy2duo" -> null
      - force_destroy = false -> null
      - id            = "srv-ni27vf7ik7oy2duo" -> null
      - name          = "head" -> null
      - namespace_id  = "ns-45yknjg3wwygd2xr" -> null
      - tags          = {} -> null
      - tags_all      = {} -> null
      - type          = "DNS_HTTP" -> null
        # (1 unchanged attribute hidden)

      - dns_config {
          - namespace_id   = "ns-45yknjg3wwygd2xr" -> null
          - routing_policy = "MULTIVALUE" -> null

          - dns_records {
              - ttl  = 300 -> null
              - type = "A" -> null
            }
        }
    }

  # random_id.bucket_name will be destroyed
  - resource "random_id" "bucket_name" {
      - b64_std     = "Cz2U/9nImPo=" -> null
      - b64_url     = "Cz2U_9nImPo" -> null
      - byte_length = 8 -> null
      - dec         = "809967334587930874" -> null
      - hex         = "0b3d94ffd9c898fa" -> null
      - id          = "Cz2U_9nImPo" -> null
    }

  # module.autoscaling_head.aws_autoscaling_group.idc[0] will be destroyed
  - resource "aws_autoscaling_group" "idc" {
      - arn                              = "arn:aws:autoscaling:us-west-2:142715460708:autoScalingGroup:77864a2f-eff3-4480-bbe3-b7ad0b7e8cbb:autoScalingGroupName/ecs-demo-distributed-ml-training-head-20250814050903807300000017" -> null
      - availability_zones               = [
          - "us-west-2a",
        ] -> null
      - capacity_rebalance               = false -> null
      - default_cooldown                 = 300 -> null
      - default_instance_warmup          = 0 -> null
      - desired_capacity                 = 1 -> null
      - enabled_metrics                  = [] -> null
      - force_delete                     = false -> null
      - force_delete_warm_pool           = false -> null
      - health_check_grace_period        = 300 -> null
      - health_check_type                = "EC2" -> null
      - id                               = "ecs-demo-distributed-ml-training-head-20250814050903807300000017" -> null
      - ignore_failed_scaling_activities = false -> null
      - load_balancers                   = [] -> null
      - max_instance_lifetime            = 0 -> null
      - max_size                         = 1 -> null
      - metrics_granularity              = "1Minute" -> null
      - min_size                         = 1 -> null
      - name                             = "ecs-demo-distributed-ml-training-head-20250814050903807300000017" -> null
      - name_prefix                      = "ecs-demo-distributed-ml-training-head-" -> null
      - predicted_capacity               = 0 -> null
      - protect_from_scale_in            = false -> null
      - service_linked_role_arn          = "arn:aws:iam::142715460708:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling" -> null
      - suspended_processes              = [] -> null
      - target_group_arns                = [] -> null
      - termination_policies             = [] -> null
      - vpc_zone_identifier              = [
          - "subnet-0135326ea3ac0f457",
        ] -> null
      - wait_for_capacity_timeout        = "10m" -> null
      - warm_pool_size                   = 0 -> null
        # (4 unchanged attributes hidden)

      - availability_zone_distribution {
          - capacity_distribution_strategy = "balanced-best-effort" -> null
        }

      - capacity_reservation_specification {
          - capacity_reservation_preference = "default" -> null
        }

      - launch_template {
          - id      = "lt-0b866d5e9e99023f4" -> null
          - name    = "ecs-demo-distributed-ml-training-head-20250814050858036300000013" -> null
          - version = "1" -> null
        }

      - tag {
          - key                 = "AmazonECSManaged" -> null
          - propagate_at_launch = true -> null
          - value               = "true" -> null
        }
      - tag {
          - key                 = "Blueprint" -> null
          - propagate_at_launch = true -> null
          - value               = "ecs-demo-distributed-ml-training" -> null
        }
      - tag {
          - key                 = "GithubRepo" -> null
          - propagate_at_launch = true -> null
          - value               = "github.com/aws-ia/ecs-blueprints" -> null
        }
      - tag {
          - key                 = "Name" -> null
          - propagate_at_launch = true -> null
          - value               = "ecs-demo-distributed-ml-training-head" -> null
        }

      - timeouts {}
    }

  # module.autoscaling_head.aws_iam_instance_profile.this[0] will be destroyed
  - resource "aws_iam_instance_profile" "this" {
      - arn         = "arn:aws:iam::142715460708:instance-profile/ecs-demo-distributed-ml-training-20250814050851823000000009" -> null
      - create_date = "2025-08-14T05:08:52Z" -> null
      - id          = "ecs-demo-distributed-ml-training-20250814050851823000000009" -> null
      - name        = "ecs-demo-distributed-ml-training-20250814050851823000000009" -> null
      - name_prefix = "ecs-demo-distributed-ml-training-" -> null
      - path        = "/" -> null
      - role        = "ecs-demo-distributed-ml-training-20250814050850894800000003" -> null
      - tags        = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all    = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id   = "AIPASCOUBDRSPZKHR7LG4" -> null
    }

  # module.autoscaling_head.aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::142715460708:role/ecs-demo-distributed-ml-training-20250814050850894800000003" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ec2.amazonaws.com"
                        }
                      - Sid       = "EC2AssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-08-14T05:08:51Z" -> null
      - description           = "ECS role for ecs-demo-distributed-ml-training" -> null
      - force_detach_policies = true -> null
      - id                    = "ecs-demo-distributed-ml-training-20250814050850894800000003" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy",
          - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "ecs-demo-distributed-ml-training-20250814050850894800000003" -> null
      - name_prefix           = "ecs-demo-distributed-ml-training-" -> null
      - path                  = "/" -> null
      - tags                  = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id             = "AROASCOUBDRSEYXSO6ERK" -> null
        # (1 unchanged attribute hidden)
    }

  # module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085222610000000c" -> null
      - policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role" -> null
      - role       = "ecs-demo-distributed-ml-training-20250814050850894800000003" -> null
    }

  # module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085207230000000b" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy" -> null
      - role       = "ecs-demo-distributed-ml-training-20250814050850894800000003" -> null
    }

  # module.autoscaling_head.aws_launch_template.this[0] will be destroyed
  - resource "aws_launch_template" "this" {
      - arn                                  = "arn:aws:ec2:us-west-2:142715460708:launch-template/lt-0b866d5e9e99023f4" -> null
      - default_version                      = 1 -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - id                                   = "lt-0b866d5e9e99023f4" -> null
      - image_id                             = (sensitive value) -> null
      - instance_type                        = "m5.xlarge" -> null
      - latest_version                       = 1 -> null
      - name                                 = "ecs-demo-distributed-ml-training-head-20250814050858036300000013" -> null
      - name_prefix                          = "ecs-demo-distributed-ml-training-head-" -> null
      - security_group_names                 = [] -> null
      - tags                                 = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all                             = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - user_data                            = "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1lY3MtZGVtby1kaXN0cmlidXRlZC1tbC10cmFpbmluZwpFT0YK" -> null
      - vpc_security_group_ids               = [
          - "sg-0179f0d43663e3a7b",
        ] -> null
        # (6 unchanged attributes hidden)

      - iam_instance_profile {
          - arn  = "arn:aws:iam::142715460708:instance-profile/ecs-demo-distributed-ml-training-20250814050851823000000009" -> null
            name = null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 0 -> null
          - http_tokens                 = "required" -> null
            # (2 unchanged attributes hidden)
        }

      - monitoring {
          - enabled = true -> null
        }
    }

  # module.autoscaling_sg.aws_security_group.this_name_prefix[0] will be destroyed
  - resource "aws_security_group" "this_name_prefix" {
      - arn                    = "arn:aws:ec2:us-west-2:142715460708:security-group/sg-0179f0d43663e3a7b" -> null
      - description            = "Autoscaling group security group" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - description      = "All protocols"
              - from_port        = 0
              - ipv6_cidr_blocks = [
                  - "::/0",
                ]
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
            },
        ] -> null
      - id                     = "sg-0179f0d43663e3a7b" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "10.0.0.0/16",
                ]
              - description      = "Allow all from VPC CIDR block"
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
            },
        ] -> null
      - name                   = "ecs-demo-distributed-ml-training-20250814050850895100000004" -> null
      - name_prefix            = "ecs-demo-distributed-ml-training-" -> null
      - owner_id               = "142715460708" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "ecs-demo-distributed-ml-training"
        } -> null
      - tags_all               = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "ecs-demo-distributed-ml-training"
        } -> null
      - vpc_id                 = "vpc-086770102a22a91bd" -> null

      - timeouts {
          - create = "10m" -> null
          - delete = "15m" -> null
        }
    }

  # module.autoscaling_sg.aws_security_group_rule.egress_rules[0] will be destroyed
  - resource "aws_security_group_rule" "egress_rules" {
      - cidr_blocks            = [
          - "0.0.0.0/0",
        ] -> null
      - description            = "All protocols" -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-3239102946" -> null
      - ipv6_cidr_blocks       = [
          - "::/0",
        ] -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-0179f0d43663e3a7b" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "egress" -> null
        # (1 unchanged attribute hidden)
    }

  # module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0] will be destroyed
  - resource "aws_security_group_rule" "ingress_with_cidr_blocks" {
      - cidr_blocks            = [
          - "10.0.0.0/16",
        ] -> null
      - description            = "Allow all from VPC CIDR block" -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-200943429" -> null
      - prefix_list_ids        = [] -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-0179f0d43663e3a7b" -> null
      - security_group_rule_id = "sgr-098cc44e01923ef02" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "ingress" -> null
    }

  # module.autoscaling_workers.aws_autoscaling_group.idc[0] will be destroyed
  - resource "aws_autoscaling_group" "idc" {
      - arn                              = "arn:aws:autoscaling:us-west-2:142715460708:autoScalingGroup:7b4576f6-8826-4adb-80b3-af0eafa4f2f0:autoScalingGroupName/ecs-demo-distributed-ml-training-workers-20250814050904058900000018" -> null
      - availability_zones               = [
          - "us-west-2a",
        ] -> null
      - capacity_rebalance               = false -> null
      - default_cooldown                 = 300 -> null
      - default_instance_warmup          = 0 -> null
      - desired_capacity                 = 2 -> null
      - enabled_metrics                  = [] -> null
      - force_delete                     = false -> null
      - force_delete_warm_pool           = false -> null
      - health_check_grace_period        = 300 -> null
      - health_check_type                = "EC2" -> null
      - id                               = "ecs-demo-distributed-ml-training-workers-20250814050904058900000018" -> null
      - ignore_failed_scaling_activities = false -> null
      - load_balancers                   = [] -> null
      - max_instance_lifetime            = 0 -> null
      - max_size                         = 2 -> null
      - metrics_granularity              = "1Minute" -> null
      - min_size                         = 2 -> null
      - name                             = "ecs-demo-distributed-ml-training-workers-20250814050904058900000018" -> null
      - name_prefix                      = "ecs-demo-distributed-ml-training-workers-" -> null
      - placement_group                  = "ml-training" -> null
      - predicted_capacity               = 0 -> null
      - protect_from_scale_in            = false -> null
      - service_linked_role_arn          = "arn:aws:iam::142715460708:role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling" -> null
      - suspended_processes              = [] -> null
      - target_group_arns                = [] -> null
      - termination_policies             = [] -> null
      - vpc_zone_identifier              = [
          - "subnet-0135326ea3ac0f457",
        ] -> null
      - wait_for_capacity_timeout        = "10m" -> null
      - warm_pool_size                   = 0 -> null
        # (3 unchanged attributes hidden)

      - availability_zone_distribution {
          - capacity_distribution_strategy = "balanced-best-effort" -> null
        }

      - capacity_reservation_specification {
          - capacity_reservation_preference = "default" -> null
        }

      - launch_template {
          - id      = "lt-082e25a9d057df249" -> null
          - name    = "ecs-demo-distributed-ml-training-workers-20250814050858298500000015" -> null
          - version = "1" -> null
        }

      - tag {
          - key                 = "AmazonECSManaged" -> null
          - propagate_at_launch = true -> null
          - value               = "true" -> null
        }
      - tag {
          - key                 = "Blueprint" -> null
          - propagate_at_launch = true -> null
          - value               = "ecs-demo-distributed-ml-training" -> null
        }
      - tag {
          - key                 = "GithubRepo" -> null
          - propagate_at_launch = true -> null
          - value               = "github.com/aws-ia/ecs-blueprints" -> null
        }
      - tag {
          - key                 = "Name" -> null
          - propagate_at_launch = true -> null
          - value               = "ecs-demo-distributed-ml-training-workers" -> null
        }

      - timeouts {}
    }

  # module.autoscaling_workers.aws_iam_instance_profile.this[0] will be destroyed
  - resource "aws_iam_instance_profile" "this" {
      - arn         = "arn:aws:iam::142715460708:instance-profile/ecs-demo-distributed-ml-training-2025081405085206470000000a" -> null
      - create_date = "2025-08-14T05:08:52Z" -> null
      - id          = "ecs-demo-distributed-ml-training-2025081405085206470000000a" -> null
      - name        = "ecs-demo-distributed-ml-training-2025081405085206470000000a" -> null
      - name_prefix = "ecs-demo-distributed-ml-training-" -> null
      - path        = "/" -> null
      - role        = "ecs-demo-distributed-ml-training-20250814050850894700000002" -> null
      - tags        = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all    = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id   = "AIPASCOUBDRSCLCWGUOMQ" -> null
    }

  # module.autoscaling_workers.aws_iam_role.this[0] will be destroyed
  - resource "aws_iam_role" "this" {
      - arn                   = "arn:aws:iam::142715460708:role/ecs-demo-distributed-ml-training-20250814050850894700000002" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ec2.amazonaws.com"
                        }
                      - Sid       = "EC2AssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-08-14T05:08:51Z" -> null
      - description           = "ECS role for ecs-demo-distributed-ml-training" -> null
      - force_detach_policies = true -> null
      - id                    = "ecs-demo-distributed-ml-training-20250814050850894700000002" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy",
          - "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "ecs-demo-distributed-ml-training-20250814050850894700000002" -> null
      - name_prefix           = "ecs-demo-distributed-ml-training-" -> null
      - path                  = "/" -> null
      - tags                  = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id             = "AROASCOUBDRSNUQVBBM4J" -> null
        # (1 unchanged attribute hidden)
    }

  # module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085234980000000d" -> null
      - policy_arn = "arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role" -> null
      - role       = "ecs-demo-distributed-ml-training-20250814050850894700000002" -> null
    }

  # module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "this" {
      - id         = "ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085240490000000e" -> null
      - policy_arn = "arn:aws:iam::aws:policy/AmazonSSMManagedEC2InstanceDefaultPolicy" -> null
      - role       = "ecs-demo-distributed-ml-training-20250814050850894700000002" -> null
    }

  # module.autoscaling_workers.aws_launch_template.this[0] will be destroyed
  - resource "aws_launch_template" "this" {
      - arn                                  = "arn:aws:ec2:us-west-2:142715460708:launch-template/lt-082e25a9d057df249" -> null
      - default_version                      = 1 -> null
      - disable_api_stop                     = false -> null
      - disable_api_termination              = false -> null
      - id                                   = "lt-082e25a9d057df249" -> null
      - image_id                             = (sensitive value) -> null
      - instance_type                        = "g5.xlarge" -> null
      - latest_version                       = 1 -> null
      - name                                 = "ecs-demo-distributed-ml-training-workers-20250814050858298500000015" -> null
      - name_prefix                          = "ecs-demo-distributed-ml-training-workers-" -> null
      - security_group_names                 = [] -> null
      - tags                                 = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all                             = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - user_data                            = "IyEvYmluL2Jhc2gKY2F0IDw8J0VPRicgPj4gL2V0Yy9lY3MvZWNzLmNvbmZpZwpFQ1NfQ0xVU1RFUj1lY3MtZGVtby1kaXN0cmlidXRlZC1tbC10cmFpbmluZwpFT0YKZWNobyAiaXBfcmVzb2x2ZT00IiA+PiAvZXRjL3l1bS5jb25mCg==" -> null
      - vpc_security_group_ids               = [
          - "sg-0179f0d43663e3a7b",
        ] -> null
        # (6 unchanged attributes hidden)

      - block_device_mappings {
          - device_name  = "/dev/xvda" -> null
          - no_device    = "0" -> null
            # (1 unchanged attribute hidden)

          - ebs {
              - delete_on_termination      = "true" -> null
              - encrypted                  = "false" -> null
              - iops                       = 0 -> null
              - throughput                 = 0 -> null
              - volume_initialization_rate = 0 -> null
              - volume_size                = 50 -> null
              - volume_type                = "gp2" -> null
                # (2 unchanged attributes hidden)
            }
        }

      - iam_instance_profile {
          - arn  = "arn:aws:iam::142715460708:instance-profile/ecs-demo-distributed-ml-training-2025081405085206470000000a" -> null
            name = null
        }

      - metadata_options {
          - http_endpoint               = "enabled" -> null
          - http_put_response_hop_limit = 0 -> null
          - http_tokens                 = "required" -> null
            # (2 unchanged attributes hidden)
        }

      - monitoring {
          - enabled = true -> null
        }
    }

  # module.ecs_cluster.aws_cloudwatch_log_group.this[0] will be destroyed
  - resource "aws_cloudwatch_log_group" "this" {
      - arn               = "arn:aws:logs:us-west-2:142715460708:log-group:/aws/ecs/ecs-demo-distributed-ml-training" -> null
      - id                = "/aws/ecs/ecs-demo-distributed-ml-training" -> null
      - log_group_class   = "STANDARD" -> null
      - name              = "/aws/ecs/ecs-demo-distributed-ml-training" -> null
      - retention_in_days = 90 -> null
      - skip_destroy      = false -> null
      - tags              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all          = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
        # (2 unchanged attributes hidden)
    }

  # module.ecs_cluster.aws_ecs_cluster.this[0] will be destroyed
  - resource "aws_ecs_cluster" "this" {
      - arn      = "arn:aws:ecs:us-west-2:142715460708:cluster/ecs-demo-distributed-ml-training" -> null
      - id       = "arn:aws:ecs:us-west-2:142715460708:cluster/ecs-demo-distributed-ml-training" -> null
      - name     = "ecs-demo-distributed-ml-training" -> null
      - tags     = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null

      - configuration {
          - execute_command_configuration {
              - logging    = "DEFAULT" -> null
                # (1 unchanged attribute hidden)
            }
        }

      - setting {
          - name  = "containerInsights" -> null
          - value = "enabled" -> null
        }
    }

  # module.ecs_service_head.aws_ecs_task_definition.this[0] will be destroyed
  - resource "aws_ecs_task_definition" "this" {
      - arn                      = "arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_head_service:1" -> null
      - arn_without_revision     = "arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_head_service" -> null
      - container_definitions    = jsonencode(
            [
              - {
                  - command                = [
                      - "/bin/bash",
                      - "-lc",
                      - "--",
                      - "ulimit -n 65536; ray start --head --dashboard-host=0.0.0.0 --metrics-export-port=8080 --num-cpus=0 --memory=10737418240 --block",
                    ]
                  - cpu                    = 3072
                  - environment            = []
                  - essential              = true
                  - image                  = "docker.io/rayproject/ray-ml:2.7.1.artur.c9f4c6-py38"
                  - interactive            = false
                  - linuxParameters        = {
                      - initProcessEnabled = false
                      - sharedMemorySize   = 20480
                    }
                  - logConfiguration       = {
                      - logDriver = "awslogs"
                      - options   = {
                          - awslogs-group         = "/aws/ecs/distributed_ml_training_head_service/ray_head"
                          - awslogs-region        = "us-west-2"
                          - awslogs-stream-prefix = "ecs"
                        }
                    }
                  - memory                 = 10240
                  - memoryReservation      = 10240
                  - mountPoints            = [
                      - {
                          - containerPath = "/tmp"
                          - readOnly      = false
                          - sourceVolume  = "tmp"
                        },
                    ]
                  - name                   = "ray_head"
                  - portMappings           = []
                  - privileged             = false
                  - pseudoTerminal         = false
                  - readonlyRootFilesystem = false
                  - startTimeout           = 30
                  - stopTimeout            = 120
                  - systemControls         = []
                  - user                   = "1000"
                  - volumesFrom            = []
                },
            ]
        ) -> null
      - cpu                      = "3072" -> null
      - enable_fault_injection   = false -> null
      - execution_role_arn       = "arn:aws:iam::142715460708:role/distributed_training_task_execution_role" -> null
      - family                   = "distributed_ml_training_head_service" -> null
      - id                       = "distributed_ml_training_head_service" -> null
      - memory                   = "10240" -> null
      - network_mode             = "awsvpc" -> null
      - requires_compatibilities = [
          - "EC2",
        ] -> null
      - revision                 = 1 -> null
      - skip_destroy             = false -> null
      - tags                     = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all                 = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - task_role_arn            = "arn:aws:iam::142715460708:role/taskRole-20250814050851385000000007" -> null
      - track_latest             = false -> null
        # (2 unchanged attributes hidden)

      - runtime_platform {
          - cpu_architecture        = "X86_64" -> null
          - operating_system_family = "LINUX" -> null
        }

      - volume {
          - configure_at_launch = false -> null
          - name                = "tmp" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # module.ecs_service_head.aws_iam_role.tasks[0] will be destroyed
  - resource "aws_iam_role" "tasks" {
      - arn                   = "arn:aws:iam::142715460708:role/taskRole-20250814050851385000000007" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Condition = {
                          - ArnLike      = {
                              - "aws:SourceArn" = "arn:aws:ecs:us-west-2:142715460708:*"
                            }
                          - StringEquals = {
                              - "aws:SourceAccount" = "142715460708"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ecs-tasks.amazonaws.com"
                        }
                      - Sid       = "ECSTasksAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-08-14T05:08:51Z" -> null
      - description           = "Task role for ecs-demo-distributed-ml-training" -> null
      - force_detach_policies = true -> null
      - id                    = "taskRole-20250814050851385000000007" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "taskRole-20250814050851385000000007" -> null
      - name_prefix           = "taskRole-" -> null
      - path                  = "/" -> null
      - tags                  = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id             = "AROASCOUBDRSGK3VMIRCA" -> null
        # (1 unchanged attribute hidden)

      - inline_policy {
          - name   = "taskRole-20250814050853253800000012" -> null
          - policy = jsonencode(
                {
                  - Statement = [
                      - {
                          - Action   = "s3:*"
                          - Effect   = "Allow"
                          - Resource = [
                              - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa/*",
                              - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa",
                            ]
                        },
                    ]
                  - Version   = "2012-10-17"
                }
            ) -> null
        }
    }

  # module.ecs_service_head.aws_iam_role_policy.tasks[0] will be destroyed
  - resource "aws_iam_role_policy" "tasks" {
      - id          = "taskRole-20250814050851385000000007:taskRole-20250814050853253800000012" -> null
      - name        = "taskRole-20250814050853253800000012" -> null
      - name_prefix = "taskRole-" -> null
      - policy      = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = "s3:*"
                      - Effect   = "Allow"
                      - Resource = [
                          - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa/*",
                          - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa",
                        ]
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - role        = "taskRole-20250814050851385000000007" -> null
    }

  # module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "tasks" {
      - id         = "taskRole-20250814050851385000000007-20250814050852635200000010" -> null
      - policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess" -> null
      - role       = "taskRole-20250814050851385000000007" -> null
    }

  # module.ecs_service_head.aws_security_group.this[0] will be destroyed
  - resource "aws_security_group" "this" {
      - arn                    = "arn:aws:ec2:us-west-2:142715460708:security-group/sg-06ec565a9fbe6a6d0" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-06ec565a9fbe6a6d0" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "10.0.0.0/8",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "distributed_ml_training_head_service-20250814050851385000000005" -> null
      - name_prefix            = "distributed_ml_training_head_service-" -> null
      - owner_id               = "142715460708" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "distributed_ml_training_head_service"
        } -> null
      - tags_all               = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "distributed_ml_training_head_service"
        } -> null
      - vpc_id                 = "vpc-086770102a22a91bd" -> null
    }

  # module.ecs_service_head.aws_security_group_rule.this["egress_all"] will be destroyed
  - resource "aws_security_group_rule" "this" {
      - cidr_blocks            = [
          - "0.0.0.0/0",
        ] -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-3336488489" -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-06ec565a9fbe6a6d0" -> null
      - security_group_rule_id = "sgr-060b4def1445a422f" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "egress" -> null
    }

  # module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"] will be destroyed
  - resource "aws_security_group_rule" "this" {
      - cidr_blocks            = [
          - "10.0.0.0/8",
        ] -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-3248105196" -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-06ec565a9fbe6a6d0" -> null
      - security_group_rule_id = "sgr-0e9f5f9d5748352a8" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "ingress" -> null
    }

  # module.ecs_service_workers.aws_ecs_task_definition.this[0] will be destroyed
  - resource "aws_ecs_task_definition" "this" {
      - arn                      = "arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_worker_service:1" -> null
      - arn_without_revision     = "arn:aws:ecs:us-west-2:142715460708:task-definition/distributed_ml_training_worker_service" -> null
      - container_definitions    = jsonencode(
            [
              - {
                  - command                = [
                      - "/bin/bash",
                      - "-lc",
                      - "--",
                      - "ulimit -n 65536; ray start --block --num-cpus=3 --num-gpus=1 --address=head.default.core-infra.local:6379 --metrics-export-port=8080 --memory=15032385536",
                    ]
                  - cpu                    = 3072
                  - environment            = []
                  - essential              = true
                  - image                  = "docker.io/rayproject/ray-ml:2.7.1.artur.c9f4c6-py38-gpu"
                  - interactive            = false
                  - linuxParameters        = {
                      - initProcessEnabled = false
                      - sharedMemorySize   = 10240
                    }
                  - logConfiguration       = {
                      - logDriver = "awslogs"
                      - options   = {
                          - awslogs-group         = "/aws/ecs/distributed_ml_training_worker_service/ray_work"
                          - awslogs-region        = "us-west-2"
                          - awslogs-stream-prefix = "ecs"
                        }
                    }
                  - memory                 = 15360
                  - memoryReservation      = 15360
                  - mountPoints            = [
                      - {
                          - containerPath = "/tmp"
                          - readOnly      = false
                          - sourceVolume  = "tmp"
                        },
                    ]
                  - name                   = "ray_work"
                  - portMappings           = []
                  - privileged             = false
                  - pseudoTerminal         = false
                  - readonlyRootFilesystem = false
                  - resourceRequirements   = [
                      - {
                          - type  = "GPU"
                          - value = "1"
                        },
                    ]
                  - startTimeout           = 30
                  - stopTimeout            = 120
                  - systemControls         = []
                  - user                   = "1000"
                  - volumesFrom            = []
                },
            ]
        ) -> null
      - cpu                      = "3072" -> null
      - enable_fault_injection   = false -> null
      - execution_role_arn       = "arn:aws:iam::142715460708:role/distributed_training_task_execution_role" -> null
      - family                   = "distributed_ml_training_worker_service" -> null
      - id                       = "distributed_ml_training_worker_service" -> null
      - memory                   = "15360" -> null
      - network_mode             = "awsvpc" -> null
      - requires_compatibilities = [
          - "EC2",
        ] -> null
      - revision                 = 1 -> null
      - skip_destroy             = false -> null
      - tags                     = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all                 = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - task_role_arn            = "arn:aws:iam::142715460708:role/taskRole-20250814050851388000000008" -> null
      - track_latest             = false -> null
        # (2 unchanged attributes hidden)

      - runtime_platform {
          - cpu_architecture        = "X86_64" -> null
          - operating_system_family = "LINUX" -> null
        }

      - volume {
          - configure_at_launch = false -> null
          - name                = "tmp" -> null
            # (1 unchanged attribute hidden)
        }
    }

  # module.ecs_service_workers.aws_iam_role.tasks[0] will be destroyed
  - resource "aws_iam_role" "tasks" {
      - arn                   = "arn:aws:iam::142715460708:role/taskRole-20250814050851388000000008" -> null
      - assume_role_policy    = jsonencode(
            {
              - Statement = [
                  - {
                      - Action    = "sts:AssumeRole"
                      - Condition = {
                          - ArnLike      = {
                              - "aws:SourceArn" = "arn:aws:ecs:us-west-2:142715460708:*"
                            }
                          - StringEquals = {
                              - "aws:SourceAccount" = "142715460708"
                            }
                        }
                      - Effect    = "Allow"
                      - Principal = {
                          - Service = "ecs-tasks.amazonaws.com"
                        }
                      - Sid       = "ECSTasksAssumeRole"
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - create_date           = "2025-08-14T05:08:51Z" -> null
      - description           = "Task role for ecs-demo-distributed-ml-training" -> null
      - force_detach_policies = true -> null
      - id                    = "taskRole-20250814050851388000000008" -> null
      - managed_policy_arns   = [
          - "arn:aws:iam::aws:policy/ReadOnlyAccess",
        ] -> null
      - max_session_duration  = 3600 -> null
      - name                  = "taskRole-20250814050851388000000008" -> null
      - name_prefix           = "taskRole-" -> null
      - path                  = "/" -> null
      - tags                  = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - unique_id             = "AROASCOUBDRSDNO6U6SIX" -> null
        # (1 unchanged attribute hidden)

      - inline_policy {
          - name   = "taskRole-20250814050853252400000011" -> null
          - policy = jsonencode(
                {
                  - Statement = [
                      - {
                          - Action   = "s3:*"
                          - Effect   = "Allow"
                          - Resource = [
                              - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa/*",
                              - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa",
                            ]
                        },
                    ]
                  - Version   = "2012-10-17"
                }
            ) -> null
        }
    }

  # module.ecs_service_workers.aws_iam_role_policy.tasks[0] will be destroyed
  - resource "aws_iam_role_policy" "tasks" {
      - id          = "taskRole-20250814050851388000000008:taskRole-20250814050853252400000011" -> null
      - name        = "taskRole-20250814050853252400000011" -> null
      - name_prefix = "taskRole-" -> null
      - policy      = jsonencode(
            {
              - Statement = [
                  - {
                      - Action   = "s3:*"
                      - Effect   = "Allow"
                      - Resource = [
                          - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa/*",
                          - "arn:aws:s3:::dt-results-0b3d94ffd9c898fa",
                        ]
                    },
                ]
              - Version   = "2012-10-17"
            }
        ) -> null
      - role        = "taskRole-20250814050851388000000008" -> null
    }

  # module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"] will be destroyed
  - resource "aws_iam_role_policy_attachment" "tasks" {
      - id         = "taskRole-20250814050851388000000008-2025081405085251180000000f" -> null
      - policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess" -> null
      - role       = "taskRole-20250814050851388000000008" -> null
    }

  # module.ecs_service_workers.aws_security_group.this[0] will be destroyed
  - resource "aws_security_group" "this" {
      - arn                    = "arn:aws:ec2:us-west-2:142715460708:security-group/sg-0e6e8cc594210a9b8" -> null
      - description            = "Managed by Terraform" -> null
      - egress                 = [
          - {
              - cidr_blocks      = [
                  - "0.0.0.0/0",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - id                     = "sg-0e6e8cc594210a9b8" -> null
      - ingress                = [
          - {
              - cidr_blocks      = [
                  - "10.0.0.0/8",
                ]
              - from_port        = 0
              - ipv6_cidr_blocks = []
              - prefix_list_ids  = []
              - protocol         = "-1"
              - security_groups  = []
              - self             = false
              - to_port          = 0
                # (1 unchanged attribute hidden)
            },
        ] -> null
      - name                   = "distributed_ml_training_worker_service-20250814050851385000000006" -> null
      - name_prefix            = "distributed_ml_training_worker_service-" -> null
      - owner_id               = "142715460708" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "distributed_ml_training_worker_service"
        } -> null
      - tags_all               = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "distributed_ml_training_worker_service"
        } -> null
      - vpc_id                 = "vpc-086770102a22a91bd" -> null
    }

  # module.ecs_service_workers.aws_security_group_rule.this["egress_all"] will be destroyed
  - resource "aws_security_group_rule" "this" {
      - cidr_blocks            = [
          - "0.0.0.0/0",
        ] -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-3578778963" -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-0e6e8cc594210a9b8" -> null
      - security_group_rule_id = "sgr-0773f35b0253cbfcb" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "egress" -> null
    }

  # module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"] will be destroyed
  - resource "aws_security_group_rule" "this" {
      - cidr_blocks            = [
          - "10.0.0.0/8",
        ] -> null
      - from_port              = 0 -> null
      - id                     = "sgrule-2431968735" -> null
      - protocol               = "-1" -> null
      - security_group_id      = "sg-0e6e8cc594210a9b8" -> null
      - security_group_rule_id = "sgr-04ff6646eea616a8c" -> null
      - self                   = false -> null
      - to_port                = 0 -> null
      - type                   = "ingress" -> null
    }

  # module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0] will be destroyed
  - resource "aws_cloudwatch_log_group" "this" {
      - arn               = "arn:aws:logs:us-west-2:142715460708:log-group:/aws/ecs/distributed_ml_training_head_service/ray_head" -> null
      - id                = "/aws/ecs/distributed_ml_training_head_service/ray_head" -> null
      - log_group_class   = "STANDARD" -> null
      - name              = "/aws/ecs/distributed_ml_training_head_service/ray_head" -> null
      - retention_in_days = 14 -> null
      - skip_destroy      = false -> null
      - tags              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all          = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
        # (2 unchanged attributes hidden)
    }

  # module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0] will be destroyed
  - resource "aws_cloudwatch_log_group" "this" {
      - arn               = "arn:aws:logs:us-west-2:142715460708:log-group:/aws/ecs/distributed_ml_training_worker_service/ray_work" -> null
      - id                = "/aws/ecs/distributed_ml_training_worker_service/ray_work" -> null
      - log_group_class   = "STANDARD" -> null
      - name              = "/aws/ecs/distributed_ml_training_worker_service/ray_work" -> null
      - retention_in_days = 14 -> null
      - skip_destroy      = false -> null
      - tags              = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all          = {
          - "Blueprint"  = "ecs-demo-distributed-ml-training"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
        # (2 unchanged attributes hidden)
    }

Plan: 0 to add, 0 to change, 38 to destroy.

Changes to Outputs:
  - cluster_arn = "arn:aws:ecs:us-west-2:142715460708:cluster/ecs-demo-distributed-ml-training" -> null
  - s3_bucket   = "dt-results-0b3d94ffd9c898fa" -> null
╷
│ Warning: Argument is deprecated
│ 
│   with aws_iam_role.task_execution_role,
│   on main.tf line 442, in resource "aws_iam_role" "task_execution_role":
│  442:   managed_policy_arns = [
│  443:     "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy",
│  444:   ]
│ 
│ managed_policy_arns is deprecated. Use the aws_iam_role_policy_attachment resource instead. If Terraform should exclusively manage all managed
│ policy attachments (the current behavior of this argument), use the aws_iam_role_policy_attachments_exclusive resource as well.
╵

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085222610000000c]
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085234980000000d]
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050850894800000003-2025081405085207230000000b]
module.ecs_service_head.aws_iam_role_policy.tasks[0]: Destroying... [id=taskRole-20250814050851385000000007:taskRole-20250814050853253800000012]
module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"]: Destroying... [id=sgrule-3248105196]
module.autoscaling_sg.aws_security_group_rule.egress_rules[0]: Destroying... [id=sgrule-3239102946]
module.ecs_service_head.aws_security_group_rule.this["egress_all"]: Destroying... [id=sgrule-3336488489]
aws_service_discovery_service.this: Destroying... [id=srv-ni27vf7ik7oy2duo]
module.autoscaling_workers.aws_autoscaling_group.idc[0]: Destroying... [id=ecs-demo-distributed-ml-training-workers-20250814050904058900000018]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017]
aws_service_discovery_service.this: Destruction complete after 0s
module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"]: Destroying... [id=sgrule-2431968735]
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Destruction complete after 0s
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonEC2ContainerServiceforEC2Role"]: Destruction complete after 0s
module.ecs_service_head.aws_iam_role_policy.tasks[0]: Destruction complete after 0s
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050850894700000002-2025081405085240490000000e]
module.autoscaling_head.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Destruction complete after 0s
module.ecs_service_workers.aws_iam_role_policy.tasks[0]: Destroying... [id=taskRole-20250814050851388000000008:taskRole-20250814050853252400000011]
module.ecs_service_head.aws_ecs_task_definition.this[0]: Destroying... [id=distributed_ml_training_head_service]
module.ecs_service_workers.aws_security_group_rule.this["egress_all"]: Destroying... [id=sgrule-3578778963]
module.ecs_service_head.aws_security_group_rule.this["ingress_private_ips"]: Destruction complete after 0s
module.ecs_service_workers.aws_ecs_task_definition.this[0]: Destroying... [id=distributed_ml_training_worker_service]
module.autoscaling_workers.aws_iam_role_policy_attachment.this["AmazonSSMManagedEC2InstanceDefaultPolicy"]: Destruction complete after 0s
module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0]: Destroying... [id=sgrule-200943429]
module.ecs_service_workers.aws_iam_role_policy.tasks[0]: Destruction complete after 0s
module.ecs_cluster.aws_ecs_cluster.this[0]: Destroying... [id=arn:aws:ecs:us-west-2:142715460708:cluster/ecs-demo-distributed-ml-training]
module.ecs_service_head.aws_ecs_task_definition.this[0]: Destruction complete after 0s
module.autoscaling_sg.aws_security_group_rule.egress_rules[0]: Destruction complete after 0s
module.ecs_service_workers.aws_ecs_task_definition.this[0]: Destruction complete after 0s
module.ecs_service_workers.aws_security_group_rule.this["ingress_private_ips"]: Destruction complete after 0s
aws_s3_bucket.results: Destroying... [id=dt-results-0b3d94ffd9c898fa]
module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0]: Destroying... [id=/aws/ecs/distributed_ml_training_head_service/ray_head]
module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Destroying... [id=taskRole-20250814050851385000000007-20250814050852635200000010]
module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0]: Destroying... [id=/aws/ecs/distributed_ml_training_worker_service/ray_work]
module.ecs_service_head.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Destruction complete after 0s
aws_iam_role.task_execution_role: Destroying... [id=distributed_training_task_execution_role]
module.ecs_service_head.module.container_definition["ray_head"].aws_cloudwatch_log_group.this[0]: Destruction complete after 0s
module.ecs_service_workers.module.container_definition["ray_work"].aws_cloudwatch_log_group.this[0]: Destruction complete after 0s
module.ecs_service_head.aws_security_group_rule.this["egress_all"]: Destruction complete after 1s
module.ecs_service_workers.aws_security_group_rule.this["egress_all"]: Destruction complete after 1s
module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Destroying... [id=taskRole-20250814050851388000000008-2025081405085251180000000f]
module.ecs_service_head.aws_iam_role.tasks[0]: Destroying... [id=taskRole-20250814050851385000000007]
module.autoscaling_sg.aws_security_group_rule.ingress_with_cidr_blocks[0]: Destruction complete after 1s
module.ecs_service_head.aws_security_group.this[0]: Destroying... [id=sg-06ec565a9fbe6a6d0]
module.ecs_service_workers.aws_security_group.this[0]: Destroying... [id=sg-0e6e8cc594210a9b8]
aws_s3_bucket.results: Destruction complete after 1s
random_id.bucket_name: Destroying... [id=Cz2U_9nImPo]
random_id.bucket_name: Destruction complete after 0s
module.ecs_service_workers.aws_iam_role_policy_attachment.tasks["ReadOnlyAccess"]: Destruction complete after 0s
module.ecs_service_workers.aws_iam_role.tasks[0]: Destroying... [id=taskRole-20250814050851388000000008]
module.ecs_service_head.aws_iam_role.tasks[0]: Destruction complete after 0s
aws_iam_role.task_execution_role: Destruction complete after 0s
module.ecs_service_head.aws_security_group.this[0]: Destruction complete after 0s
module.ecs_service_workers.aws_iam_role.tasks[0]: Destruction complete after 1s
module.ecs_service_workers.aws_security_group.this[0]: Destruction complete after 1s
module.ecs_cluster.aws_ecs_cluster.this[0]: Destruction complete after 9s
module.ecs_cluster.aws_cloudwatch_log_group.this[0]: Destroying... [id=/aws/ecs/ecs-demo-distributed-ml-training]
module.ecs_cluster.aws_cloudwatch_log_group.this[0]: Destruction complete after 0s
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 00m10s elapsed]
module.autoscaling_workers.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-workers-20250814050904058900000018, 00m10s elapsed]
module.autoscaling_workers.aws_autoscaling_group.idc[0]: Destruction complete after 17s
aws_placement_group.workers: Destroying... [id=ml-training]
module.autoscaling_workers.aws_launch_template.this[0]: Destroying... [id=lt-082e25a9d057df249]
module.autoscaling_workers.aws_launch_template.this[0]: Destruction complete after 0s
module.autoscaling_workers.aws_iam_instance_profile.this[0]: Destroying... [id=ecs-demo-distributed-ml-training-2025081405085206470000000a]
aws_placement_group.workers: Destruction complete after 0s
module.autoscaling_workers.aws_iam_instance_profile.this[0]: Destruction complete after 0s
module.autoscaling_workers.aws_iam_role.this[0]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050850894700000002]
module.autoscaling_workers.aws_iam_role.this[0]: Destruction complete after 1s
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 00m20s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 00m30s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 00m40s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 00m50s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 01m00s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 01m10s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Still destroying... [id=ecs-demo-distributed-ml-training-head-20250814050903807300000017, 01m20s elapsed]
module.autoscaling_head.aws_autoscaling_group.idc[0]: Destruction complete after 1m23s
module.autoscaling_head.aws_launch_template.this[0]: Destroying... [id=lt-0b866d5e9e99023f4]
module.autoscaling_head.aws_launch_template.this[0]: Destruction complete after 0s
module.autoscaling_head.aws_iam_instance_profile.this[0]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050851823000000009]
module.autoscaling_sg.aws_security_group.this_name_prefix[0]: Destroying... [id=sg-0179f0d43663e3a7b]
module.autoscaling_head.aws_iam_instance_profile.this[0]: Destruction complete after 0s
module.autoscaling_sg.aws_security_group.this_name_prefix[0]: Destruction complete after 0s
module.autoscaling_head.aws_iam_role.this[0]: Destroying... [id=ecs-demo-distributed-ml-training-20250814050850894800000003]
module.autoscaling_head.aws_iam_role.this[0]: Destruction complete after 1s

Destroy complete! Resources: 38 destroyed.
user-2:distributed-ml-training user$ cd ../core-infra/
user-2:core-infra user$ ls -ltr
total 136
-rw-r--r--  1 user  staff   5488 Aug 13 21:25 README.md
-rw-r--r--  1 user  staff   4619 Aug 13 21:25 main.tf
-rw-r--r--  1 user  staff   1704 Aug 13 21:25 outputs.tf
-rw-r--r--  1 user  staff    147 Aug 13 21:25 versions.tf
-rw-r--r--@ 1 user  staff  42025 Aug 13 22:07 terraform.tfstate
user-2:core-infra user$ terraform destroy
module.autoscaling.data.aws_partition.current: Reading...
data.aws_ssm_parameter.ecs_optimized_ami: Reading...
data.aws_availability_zones.available: Reading...
module.vpc.aws_vpc.this[0]: Refreshing state... [id=vpc-086770102a22a91bd]
module.autoscaling.data.aws_partition.current: Read complete after 0s [id=aws]
module.autoscaling.data.aws_iam_policy_document.assume_role_policy[0]: Reading...
module.autoscaling.data.aws_iam_policy_document.assume_role_policy[0]: Read complete after 0s [id=1256122602]
data.aws_ssm_parameter.ecs_optimized_ami: Read complete after 1s [id=/aws/service/ecs/optimized-ami/amazon-linux-2/recommended]
data.aws_availability_zones.available: Read complete after 1s [id=us-west-2]
module.vpc.aws_default_security_group.this[0]: Refreshing state... [id=sg-0fc873ae087c259f1]
aws_service_discovery_private_dns_namespace.this: Refreshing state... [id=ns-45yknjg3wwygd2xr]
module.vpc.aws_default_route_table.default[0]: Refreshing state... [id=rtb-0cf1a9f14f363660b]
module.vpc.aws_route_table.public[0]: Refreshing state... [id=rtb-0b6d50b53c8d2520b]
module.vpc.aws_default_network_acl.this[0]: Refreshing state... [id=acl-00bed44921d3d73b5]
module.vpc.aws_subnet.public[1]: Refreshing state... [id=subnet-017f7c39ccfb3c88b]
module.vpc.aws_subnet.public[0]: Refreshing state... [id=subnet-052722c629e9b9679]
module.vpc.aws_subnet.public[2]: Refreshing state... [id=subnet-0017d5c65985eb668]
module.vpc.aws_internet_gateway.this[0]: Refreshing state... [id=igw-000df586ea38625dd]
module.vpc.aws_subnet.private[2]: Refreshing state... [id=subnet-0dba6c4e8436fbf44]
module.vpc.aws_subnet.private[0]: Refreshing state... [id=subnet-0135326ea3ac0f457]
module.vpc.aws_subnet.private[1]: Refreshing state... [id=subnet-0427cd24b2f6ba6d5]
module.vpc.aws_route_table.private[0]: Refreshing state... [id=rtb-0049636a410d98ec0]
module.vpc.aws_eip.nat[0]: Refreshing state... [id=eipalloc-0664b98e05814ecd7]
module.vpc.aws_route.public_internet_gateway[0]: Refreshing state... [id=r-rtb-0b6d50b53c8d2520b1080289494]
module.vpc.aws_route_table_association.public[2]: Refreshing state... [id=rtbassoc-0b532683bbb6ce41c]
module.vpc.aws_route_table_association.public[1]: Refreshing state... [id=rtbassoc-019f732b29cea7f70]
module.vpc.aws_route_table_association.public[0]: Refreshing state... [id=rtbassoc-0fc6d067272b36d40]
module.vpc.aws_route_table_association.private[2]: Refreshing state... [id=rtbassoc-003da1893bb8eb8aa]
module.vpc.aws_route_table_association.private[0]: Refreshing state... [id=rtbassoc-0f3ad9f85c64ed1de]
module.vpc.aws_route_table_association.private[1]: Refreshing state... [id=rtbassoc-02c992ecd715ab38e]
module.vpc.aws_nat_gateway.this[0]: Refreshing state... [id=nat-067679c1f1bc4a875]
module.vpc.aws_route.private_nat_gateway[0]: Refreshing state... [id=r-rtb-0049636a410d98ec01080289494]

Terraform used the selected providers to generate the following execution plan. Resource actions are indicated with the following symbols:
  - destroy

Terraform will perform the following actions:

  # aws_service_discovery_private_dns_namespace.this will be destroyed
  - resource "aws_service_discovery_private_dns_namespace" "this" {
      - arn         = "arn:aws:servicediscovery:us-west-2:142715460708:namespace/ns-45yknjg3wwygd2xr" -> null
      - description = "Service discovery <namespace>.<clustername>.local" -> null
      - hosted_zone = "Z05295251WSH9AA73HQAV" -> null
      - id          = "ns-45yknjg3wwygd2xr" -> null
      - name        = "default.core-infra.local" -> null
      - tags        = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - tags_all    = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
        } -> null
      - vpc         = "vpc-086770102a22a91bd" -> null
    }

  # module.vpc.aws_default_network_acl.this[0] will be destroyed
  - resource "aws_default_network_acl" "this" {
      - arn                    = "arn:aws:ec2:us-west-2:142715460708:network-acl/acl-00bed44921d3d73b5" -> null
      - default_network_acl_id = "acl-00bed44921d3d73b5" -> null
      - id                     = "acl-00bed44921d3d73b5" -> null
      - owner_id               = "142715460708" -> null
      - subnet_ids             = [
          - "subnet-0017d5c65985eb668",
          - "subnet-0135326ea3ac0f457",
          - "subnet-017f7c39ccfb3c88b",
          - "subnet-0427cd24b2f6ba6d5",
          - "subnet-052722c629e9b9679",
          - "subnet-0dba6c4e8436fbf44",
        ] -> null
      - tags                   = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-default"
        } -> null
      - tags_all               = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-default"
        } -> null
      - vpc_id                 = "vpc-086770102a22a91bd" -> null

      - egress {
          - action          = "allow" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - ipv6_cidr_block = "::/0" -> null
          - protocol        = "-1" -> null
          - rule_no         = 101 -> null
          - to_port         = 0 -> null
            # (1 unchanged attribute hidden)
        }
      - egress {
          - action          = "allow" -> null
          - cidr_block      = "0.0.0.0/0" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - protocol        = "-1" -> null
          - rule_no         = 100 -> null
          - to_port         = 0 -> null
            # (1 unchanged attribute hidden)
        }

      - ingress {
          - action          = "allow" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - ipv6_cidr_block = "::/0" -> null
          - protocol        = "-1" -> null
          - rule_no         = 101 -> null
          - to_port         = 0 -> null
            # (1 unchanged attribute hidden)
        }
      - ingress {
          - action          = "allow" -> null
          - cidr_block      = "0.0.0.0/0" -> null
          - from_port       = 0 -> null
          - icmp_code       = 0 -> null
          - icmp_type       = 0 -> null
          - protocol        = "-1" -> null
          - rule_no         = 100 -> null
          - to_port         = 0 -> null
            # (1 unchanged attribute hidden)
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be destroyed
  - resource "aws_default_route_table" "default" {
      - arn                    = "arn:aws:ec2:us-west-2:142715460708:route-table/rtb-0cf1a9f14f363660b" -> null
      - default_route_table_id = "rtb-0cf1a9f14f363660b" -> null
      - id                     = "rtb-0cf1a9f14f363660b" -> null
      - owner_id               = "142715460708" -> null
      - propagating_vgws       = [] -> null
      - route                  = [] -> null
      - tags                   = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-default"
        } -> null
      - tags_all               = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-default"
        } -> null
      - vpc_id                 = "vpc-086770102a22a91bd" -> null

      - timeouts {
          - create = "5m" -> null
          - update = "5m" -> null
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be destroyed
  - resource "aws_default_security_group" "this" {
      - arn                    = "arn:aws:ec2:us-west-2:142715460708:security-group/sg-0fc873ae087c259f1" -> null
      - description            = "default VPC security group" -> null
      - egress                 = [] -> null
      - id                     = "sg-0fc873ae087c259f1" -> null
      - ingress                = [] -> null
      - name                   = "default" -> null
      - owner_id               = "142715460708" -> null
      - revoke_rules_on_delete = false -> null
      - tags                   = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-default"
        } -> null
      - tags_all               = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-default"
        } -> null
      - vpc_id                 = "vpc-086770102a22a91bd" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_eip.nat[0] will be destroyed
  - resource "aws_eip" "nat" {
      - allocation_id            = "eipalloc-0664b98e05814ecd7" -> null
      - arn                      = "arn:aws:ec2:us-west-2:142715460708:elastic-ip/eipalloc-0664b98e05814ecd7" -> null
      - association_id           = "eipassoc-0e484d06bf2e8031b" -> null
      - domain                   = "vpc" -> null
      - id                       = "eipalloc-0664b98e05814ecd7" -> null
      - network_border_group     = "us-west-2" -> null
      - network_interface        = "eni-09d7a977f20d7f8dc" -> null
      - private_dns              = "ip-10-0-48-39.us-west-2.compute.internal" -> null
      - private_ip               = "10.0.48.39" -> null
      - public_dns               = "ec2-52-24-77-213.us-west-2.compute.amazonaws.com" -> null
      - public_ip                = "52.24.77.213" -> null
      - public_ipv4_pool         = "amazon" -> null
      - tags                     = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-us-west-2a"
        } -> null
      - tags_all                 = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-us-west-2a"
        } -> null
      - vpc                      = true -> null
        # (5 unchanged attributes hidden)
    }

  # module.vpc.aws_internet_gateway.this[0] will be destroyed
  - resource "aws_internet_gateway" "this" {
      - arn      = "arn:aws:ec2:us-west-2:142715460708:internet-gateway/igw-000df586ea38625dd" -> null
      - id       = "igw-000df586ea38625dd" -> null
      - owner_id = "142715460708" -> null
      - tags     = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra"
        } -> null
      - tags_all = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra"
        } -> null
      - vpc_id   = "vpc-086770102a22a91bd" -> null
    }

  # module.vpc.aws_nat_gateway.this[0] will be destroyed
  - resource "aws_nat_gateway" "this" {
      - allocation_id                      = "eipalloc-0664b98e05814ecd7" -> null
      - association_id                     = "eipassoc-0e484d06bf2e8031b" -> null
      - connectivity_type                  = "public" -> null
      - id                                 = "nat-067679c1f1bc4a875" -> null
      - network_interface_id               = "eni-09d7a977f20d7f8dc" -> null
      - private_ip                         = "10.0.48.39" -> null
      - public_ip                          = "52.24.77.213" -> null
      - secondary_allocation_ids           = [] -> null
      - secondary_private_ip_address_count = 0 -> null
      - secondary_private_ip_addresses     = [] -> null
      - subnet_id                          = "subnet-052722c629e9b9679" -> null
      - tags                               = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-us-west-2a"
        } -> null
      - tags_all                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-us-west-2a"
        } -> null
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be destroyed
  - resource "aws_route" "private_nat_gateway" {
      - destination_cidr_block      = "0.0.0.0/0" -> null
      - id                          = "r-rtb-0049636a410d98ec01080289494" -> null
      - nat_gateway_id              = "nat-067679c1f1bc4a875" -> null
      - origin                      = "CreateRoute" -> null
      - route_table_id              = "rtb-0049636a410d98ec0" -> null
      - state                       = "active" -> null
        # (13 unchanged attributes hidden)

      - timeouts {
          - create = "5m" -> null
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be destroyed
  - resource "aws_route" "public_internet_gateway" {
      - destination_cidr_block      = "0.0.0.0/0" -> null
      - gateway_id                  = "igw-000df586ea38625dd" -> null
      - id                          = "r-rtb-0b6d50b53c8d2520b1080289494" -> null
      - origin                      = "CreateRoute" -> null
      - route_table_id              = "rtb-0b6d50b53c8d2520b" -> null
      - state                       = "active" -> null
        # (13 unchanged attributes hidden)

      - timeouts {
          - create = "5m" -> null
        }
    }

  # module.vpc.aws_route_table.private[0] will be destroyed
  - resource "aws_route_table" "private" {
      - arn              = "arn:aws:ec2:us-west-2:142715460708:route-table/rtb-0049636a410d98ec0" -> null
      - id               = "rtb-0049636a410d98ec0" -> null
      - owner_id         = "142715460708" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - nat_gateway_id             = "nat-067679c1f1bc4a875"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private"
        } -> null
      - tags_all         = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private"
        } -> null
      - vpc_id           = "vpc-086770102a22a91bd" -> null
    }

  # module.vpc.aws_route_table.public[0] will be destroyed
  - resource "aws_route_table" "public" {
      - arn              = "arn:aws:ec2:us-west-2:142715460708:route-table/rtb-0b6d50b53c8d2520b" -> null
      - id               = "rtb-0b6d50b53c8d2520b" -> null
      - owner_id         = "142715460708" -> null
      - propagating_vgws = [] -> null
      - route            = [
          - {
              - cidr_block                 = "0.0.0.0/0"
              - gateway_id                 = "igw-000df586ea38625dd"
                # (11 unchanged attributes hidden)
            },
        ] -> null
      - tags             = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public"
        } -> null
      - tags_all         = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public"
        } -> null
      - vpc_id           = "vpc-086770102a22a91bd" -> null
    }

  # module.vpc.aws_route_table_association.private[0] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-0f3ad9f85c64ed1de" -> null
      - route_table_id = "rtb-0049636a410d98ec0" -> null
      - subnet_id      = "subnet-0135326ea3ac0f457" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_route_table_association.private[1] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-02c992ecd715ab38e" -> null
      - route_table_id = "rtb-0049636a410d98ec0" -> null
      - subnet_id      = "subnet-0427cd24b2f6ba6d5" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_route_table_association.private[2] will be destroyed
  - resource "aws_route_table_association" "private" {
      - id             = "rtbassoc-003da1893bb8eb8aa" -> null
      - route_table_id = "rtb-0049636a410d98ec0" -> null
      - subnet_id      = "subnet-0dba6c4e8436fbf44" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_route_table_association.public[0] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-0fc6d067272b36d40" -> null
      - route_table_id = "rtb-0b6d50b53c8d2520b" -> null
      - subnet_id      = "subnet-052722c629e9b9679" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_route_table_association.public[1] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-019f732b29cea7f70" -> null
      - route_table_id = "rtb-0b6d50b53c8d2520b" -> null
      - subnet_id      = "subnet-017f7c39ccfb3c88b" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_route_table_association.public[2] will be destroyed
  - resource "aws_route_table_association" "public" {
      - id             = "rtbassoc-0b532683bbb6ce41c" -> null
      - route_table_id = "rtb-0b6d50b53c8d2520b" -> null
      - subnet_id      = "subnet-0017d5c65985eb668" -> null
        # (1 unchanged attribute hidden)
    }

  # module.vpc.aws_subnet.private[0] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-west-2:142715460708:subnet/subnet-0135326ea3ac0f457" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2a" -> null
      - availability_zone_id                           = "usw2-az2" -> null
      - cidr_block                                     = "10.0.0.0/20" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0135326ea3ac0f457" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "142715460708" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private-us-west-2a"
        } -> null
      - tags_all                                       = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private-us-west-2a"
        } -> null
      - vpc_id                                         = "vpc-086770102a22a91bd" -> null
        # (4 unchanged attributes hidden)
    }

  # module.vpc.aws_subnet.private[1] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-west-2:142715460708:subnet/subnet-0427cd24b2f6ba6d5" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2b" -> null
      - availability_zone_id                           = "usw2-az1" -> null
      - cidr_block                                     = "10.0.16.0/20" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0427cd24b2f6ba6d5" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "142715460708" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private-us-west-2b"
        } -> null
      - tags_all                                       = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private-us-west-2b"
        } -> null
      - vpc_id                                         = "vpc-086770102a22a91bd" -> null
        # (4 unchanged attributes hidden)
    }

  # module.vpc.aws_subnet.private[2] will be destroyed
  - resource "aws_subnet" "private" {
      - arn                                            = "arn:aws:ec2:us-west-2:142715460708:subnet/subnet-0dba6c4e8436fbf44" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2c" -> null
      - availability_zone_id                           = "usw2-az3" -> null
      - cidr_block                                     = "10.0.32.0/20" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0dba6c4e8436fbf44" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "142715460708" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private-us-west-2c"
        } -> null
      - tags_all                                       = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-private-us-west-2c"
        } -> null
      - vpc_id                                         = "vpc-086770102a22a91bd" -> null
        # (4 unchanged attributes hidden)
    }

  # module.vpc.aws_subnet.public[0] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-west-2:142715460708:subnet/subnet-052722c629e9b9679" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2a" -> null
      - availability_zone_id                           = "usw2-az2" -> null
      - cidr_block                                     = "10.0.48.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-052722c629e9b9679" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "142715460708" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public-us-west-2a"
        } -> null
      - tags_all                                       = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public-us-west-2a"
        } -> null
      - vpc_id                                         = "vpc-086770102a22a91bd" -> null
        # (4 unchanged attributes hidden)
    }

  # module.vpc.aws_subnet.public[1] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-west-2:142715460708:subnet/subnet-017f7c39ccfb3c88b" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2b" -> null
      - availability_zone_id                           = "usw2-az1" -> null
      - cidr_block                                     = "10.0.49.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-017f7c39ccfb3c88b" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "142715460708" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public-us-west-2b"
        } -> null
      - tags_all                                       = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public-us-west-2b"
        } -> null
      - vpc_id                                         = "vpc-086770102a22a91bd" -> null
        # (4 unchanged attributes hidden)
    }

  # module.vpc.aws_subnet.public[2] will be destroyed
  - resource "aws_subnet" "public" {
      - arn                                            = "arn:aws:ec2:us-west-2:142715460708:subnet/subnet-0017d5c65985eb668" -> null
      - assign_ipv6_address_on_creation                = false -> null
      - availability_zone                              = "us-west-2c" -> null
      - availability_zone_id                           = "usw2-az3" -> null
      - cidr_block                                     = "10.0.50.0/24" -> null
      - enable_dns64                                   = false -> null
      - enable_lni_at_device_index                     = 0 -> null
      - enable_resource_name_dns_a_record_on_launch    = false -> null
      - enable_resource_name_dns_aaaa_record_on_launch = false -> null
      - id                                             = "subnet-0017d5c65985eb668" -> null
      - ipv6_native                                    = false -> null
      - map_customer_owned_ip_on_launch                = false -> null
      - map_public_ip_on_launch                        = false -> null
      - owner_id                                       = "142715460708" -> null
      - private_dns_hostname_type_on_launch            = "ip-name" -> null
      - tags                                           = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public-us-west-2c"
        } -> null
      - tags_all                                       = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra-public-us-west-2c"
        } -> null
      - vpc_id                                         = "vpc-086770102a22a91bd" -> null
        # (4 unchanged attributes hidden)
    }

  # module.vpc.aws_vpc.this[0] will be destroyed
  - resource "aws_vpc" "this" {
      - arn                                  = "arn:aws:ec2:us-west-2:142715460708:vpc/vpc-086770102a22a91bd" -> null
      - assign_generated_ipv6_cidr_block     = false -> null
      - cidr_block                           = "10.0.0.0/16" -> null
      - default_network_acl_id               = "acl-00bed44921d3d73b5" -> null
      - default_route_table_id               = "rtb-0cf1a9f14f363660b" -> null
      - default_security_group_id            = "sg-0fc873ae087c259f1" -> null
      - dhcp_options_id                      = "dopt-0e0df0ccc15131e03" -> null
      - enable_dns_hostnames                 = true -> null
      - enable_dns_support                   = true -> null
      - enable_network_address_usage_metrics = false -> null
      - id                                   = "vpc-086770102a22a91bd" -> null
      - instance_tenancy                     = "default" -> null
      - ipv6_netmask_length                  = 0 -> null
      - main_route_table_id                  = "rtb-0cf1a9f14f363660b" -> null
      - owner_id                             = "142715460708" -> null
      - tags                                 = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra"
        } -> null
      - tags_all                             = {
          - "Blueprint"  = "core-infra"
          - "GithubRepo" = "github.com/aws-ia/ecs-blueprints"
          - "Name"       = "core-infra"
        } -> null
        # (4 unchanged attributes hidden)
    }

Plan: 0 to add, 0 to change, 24 to destroy.

Changes to Outputs:
  - cluster_name                 = "core-infra" -> null
  - private_subnets              = [
      - "subnet-0135326ea3ac0f457",
      - "subnet-0427cd24b2f6ba6d5",
      - "subnet-0dba6c4e8436fbf44",
    ] -> null
  - private_subnets_cidr_blocks  = [
      - "10.0.0.0/20",
      - "10.0.16.0/20",
      - "10.0.32.0/20",
    ] -> null
  - public_subnets               = [
      - "subnet-052722c629e9b9679",
      - "subnet-017f7c39ccfb3c88b",
      - "subnet-0017d5c65985eb668",
    ] -> null
  - service_discovery_namespaces = {
      - arn         = "arn:aws:servicediscovery:us-west-2:142715460708:namespace/ns-45yknjg3wwygd2xr"
      - description = "Service discovery <namespace>.<clustername>.local"
      - hosted_zone = "Z05295251WSH9AA73HQAV"
      - id          = "ns-45yknjg3wwygd2xr"
      - name        = "default.core-infra.local"
      - tags        = {
          - Blueprint  = "core-infra"
          - GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      - tags_all    = {
          - Blueprint  = "core-infra"
          - GithubRepo = "github.com/aws-ia/ecs-blueprints"
        }
      - vpc         = "vpc-086770102a22a91bd"
    } -> null
  - vpc_id                       = "vpc-086770102a22a91bd" -> null

Do you really want to destroy all resources?
  Terraform will destroy all your managed infrastructure, as shown above.
  There is no undo. Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_service_discovery_private_dns_namespace.this: Destroying... [id=ns-45yknjg3wwygd2xr]
module.vpc.aws_route_table_association.private[0]: Destroying... [id=rtbassoc-0f3ad9f85c64ed1de]
module.vpc.aws_route_table_association.public[1]: Destroying... [id=rtbassoc-019f732b29cea7f70]
module.vpc.aws_default_security_group.this[0]: Destroying... [id=sg-0fc873ae087c259f1]
module.vpc.aws_route_table_association.public[2]: Destroying... [id=rtbassoc-0b532683bbb6ce41c]
module.vpc.aws_route_table_association.private[1]: Destroying... [id=rtbassoc-02c992ecd715ab38e]
module.vpc.aws_route.private_nat_gateway[0]: Destroying... [id=r-rtb-0049636a410d98ec01080289494]
module.vpc.aws_default_route_table.default[0]: Destroying... [id=rtb-0cf1a9f14f363660b]
module.vpc.aws_route.public_internet_gateway[0]: Destroying... [id=r-rtb-0b6d50b53c8d2520b1080289494]
module.vpc.aws_default_network_acl.this[0]: Destroying... [id=acl-00bed44921d3d73b5]
module.vpc.aws_default_route_table.default[0]: Destruction complete after 0s
module.vpc.aws_default_security_group.this[0]: Destruction complete after 0s
module.vpc.aws_default_network_acl.this[0]: Destruction complete after 0s
module.vpc.aws_route_table_association.public[0]: Destroying... [id=rtbassoc-0fc6d067272b36d40]
module.vpc.aws_route_table_association.private[2]: Destroying... [id=rtbassoc-003da1893bb8eb8aa]
module.vpc.aws_route_table_association.private[1]: Destruction complete after 1s
module.vpc.aws_route_table_association.public[1]: Destruction complete after 1s
module.vpc.aws_route_table_association.private[0]: Destruction complete after 1s
module.vpc.aws_route_table_association.public[2]: Destruction complete after 1s
module.vpc.aws_route_table_association.private[2]: Destruction complete after 0s
module.vpc.aws_subnet.private[0]: Destroying... [id=subnet-0135326ea3ac0f457]
module.vpc.aws_subnet.private[1]: Destroying... [id=subnet-0427cd24b2f6ba6d5]
module.vpc.aws_subnet.private[2]: Destroying... [id=subnet-0dba6c4e8436fbf44]
module.vpc.aws_route.private_nat_gateway[0]: Destruction complete after 1s
module.vpc.aws_route_table_association.public[0]: Destruction complete after 1s
module.vpc.aws_route.public_internet_gateway[0]: Destruction complete after 1s
module.vpc.aws_nat_gateway.this[0]: Destroying... [id=nat-067679c1f1bc4a875]
module.vpc.aws_route_table.private[0]: Destroying... [id=rtb-0049636a410d98ec0]
module.vpc.aws_route_table.public[0]: Destroying... [id=rtb-0b6d50b53c8d2520b]
module.vpc.aws_subnet.private[0]: Destruction complete after 0s
module.vpc.aws_subnet.private[2]: Destruction complete after 1s
module.vpc.aws_route_table.private[0]: Destruction complete after 1s
module.vpc.aws_route_table.public[0]: Destruction complete after 1s
module.vpc.aws_subnet.private[1]: Destruction complete after 1s
aws_service_discovery_private_dns_namespace.this: Still destroying... [id=ns-45yknjg3wwygd2xr, 00m10s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-067679c1f1bc4a875, 00m10s elapsed]
aws_service_discovery_private_dns_namespace.this: Still destroying... [id=ns-45yknjg3wwygd2xr, 00m20s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-067679c1f1bc4a875, 00m20s elapsed]
aws_service_discovery_private_dns_namespace.this: Still destroying... [id=ns-45yknjg3wwygd2xr, 00m30s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-067679c1f1bc4a875, 00m30s elapsed]
aws_service_discovery_private_dns_namespace.this: Still destroying... [id=ns-45yknjg3wwygd2xr, 00m40s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-067679c1f1bc4a875, 00m40s elapsed]
aws_service_discovery_private_dns_namespace.this: Destruction complete after 44s
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-067679c1f1bc4a875, 00m50s elapsed]
module.vpc.aws_nat_gateway.this[0]: Still destroying... [id=nat-067679c1f1bc4a875, 01m00s elapsed]
module.vpc.aws_nat_gateway.this[0]: Destruction complete after 1m1s
module.vpc.aws_subnet.public[2]: Destroying... [id=subnet-0017d5c65985eb668]
module.vpc.aws_subnet.public[0]: Destroying... [id=subnet-052722c629e9b9679]
module.vpc.aws_eip.nat[0]: Destroying... [id=eipalloc-0664b98e05814ecd7]
module.vpc.aws_subnet.public[1]: Destroying... [id=subnet-017f7c39ccfb3c88b]
module.vpc.aws_subnet.public[2]: Destruction complete after 0s
module.vpc.aws_subnet.public[1]: Destruction complete after 0s
module.vpc.aws_subnet.public[0]: Destruction complete after 0s
module.vpc.aws_eip.nat[0]: Destruction complete after 1s
module.vpc.aws_internet_gateway.this[0]: Destroying... [id=igw-000df586ea38625dd]
module.vpc.aws_internet_gateway.this[0]: Destruction complete after 0s
module.vpc.aws_vpc.this[0]: Destroying... [id=vpc-086770102a22a91bd]
module.vpc.aws_vpc.this[0]: Destruction complete after 1s

Destroy complete! Resources: 24 destroyed.
user-2:core-infra user$ 
